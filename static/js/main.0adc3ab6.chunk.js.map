{"version":3,"sources":["serviceWorker.js","common/navigation/Navigation.js","common/Data.js","common/helpers.js","common/ModalDictionary.js","common/sidebar/Sidebar.js","App.js","exercises/ExercisesNav.js","exercises/Exercises.js","Home.js","components/ButtonLoader.js","common/settings/Settings.js","expressions/Expressions.js","words/Answer.js","words/Quiz.js","words/Completed.js","words/LearnWords.js","Routes.js","index.js"],"names":["Boolean","window","location","hostname","match","Navigation","props","className","onClick","openSidebar","apiUri","Levels","Data","uri","options","fetch","then","response","json","Uris","wordsSearch","wordsRead","wordsGet","phrasesRead","exrcisesSearch","exrcisesRead","lessons","Local","defaultData","sound","exercises","words","levels","forEach","element","dontKnow","offset","limit","know","wrong","wordsLocal","currentLevel","setItem","key","data","localStorage","getItem","setData","JSON","stringify","getData","keyLocal","local","parse","split","reduce","o","i","getMp3","word","playMp3","str","mp3Name","trim","toLowerCase","replace","audio","Audio","play","myUrl","url","params","URL","search","URLSearchParams","ModalDictionary","handleChange","event","setState","value","currentTarget","handlePlay","dataset","state","list","this","map","item","index","type","data-word","en","bg","style","styles","tabIndex","role","aria-hidden","handleDictionary","onChange","placeholder","prevProps","prevState","React","Component","Sidebar","display","sidebar","closeSidebar","to","App","width","bind","ExercisesNav","handleLocal","learningEnglish","exercisesLength","Object","keys","length","id","sort","a","b","lesson","title","exercises_count","Exercises","handleAnswer","indexOf","push","handleBlur","answered","exercise","classAnswered","rows","data-id","onBlur","Number","items","Home","ButtonLoader","useState","click","setClick","loader","text","content","blur","func","setInterval","Settings","handleResetExercises","handleResetLearnWords","handleSound","handleResetAll","reset","Expressions","getExpressions","sorting","test","aria-describedby","Answer","useEffect","handleNext","Quiz","handleIKnow","Completed","deafultWord","level","LearnWords","currentWord","lastLimit","localS","dontKnowFilter","filter","getWords","concat","currentComponent","catch","Promise","resolve","reject","handleLevel","handleChangeLevel","comp","components","Routes","exact","path","component","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iXAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,uECLSC,G,MATI,SAACC,GAEhB,OACI,yBAAKC,UAAU,cACX,4BAAQC,QAASF,EAAMG,YAAaF,UAAU,WAAU,kBAAC,IAAD,UCI9DG,EAAS,gDAGFC,EAAS,CAAC,KAAM,KAAM,KAAM,KAAM,OAAQ,MAoB1CC,EAEJ,SAASC,GAAkB,IAAbC,EAAY,uDAAJ,GAEvB,OAAOC,MAAMF,EAAKC,GACbE,MAAK,SAACC,GACH,OAAOA,EAASC,WAMnBC,EAAO,CAEhBC,YAAaV,EAAS,eACtBW,UAAWX,EAAS,aACpBY,SAAUZ,EAAS,YACnBa,YAAab,EAAS,eACtBc,eAAgBd,EAAS,mBACzBe,aAAcf,EAAS,iBACvBgB,QAAShB,EAAS,WAKTiB,EAAQ,CAEjBC,YAAa,CACTC,OAAO,EACPC,UAAW,GACXC,MAAO,CACHC,OAhDO,WACf,IAAID,EAAQ,GAYZ,OAVApB,EAAOsB,SAAQ,SAAAC,GACXH,EAAMG,GAAW,CACbC,SAAU,GACVC,OAAQ,EACRC,MAAO,EACPC,KAAM,EACNC,MAAO,MAIRR,EAmCSS,GACRC,aAAc,OAItBC,QAAS,SAASC,EAAKC,GACnBC,aAAaH,QAAQC,EAAKC,IAG9BE,QAAS,SAASH,GACd,OAAOE,aAAaC,QAAQH,IAGhCI,QAAS,WAA8D,IAApDH,EAAmD,uDAA5CjB,EAAMC,YAAae,EAAyB,uDAAnB,kBAC/CE,aAAaH,QAAQC,EAAKK,KAAKC,UAAUL,KAG7CM,QAAS,WAAiD,IAAvCP,EAAsC,uDAAlC,GAAIQ,EAA8B,uDAAnB,kBAC5BC,EAAQJ,KAAKK,MAAMR,aAAaC,QAAQK,IAE9C,OAAIR,EAEOA,EAAIW,MAAM,KAAKC,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAEC,KAAIL,GAG1CA,ICzFFM,EAAS,SAACC,GAAD,6DAA0DA,EAA1D,SAGTC,EAAU,WAAa,IAAZC,EAAW,uDAAP,GAClBhC,EAAQF,EAAMuB,QAAQ,SAE5B,GAAIrB,EAAO,CACP,IAAIiC,EAAUD,EAAIE,OAAOC,cAAcC,QAAQ,aAAc,KACzDC,EAAQ,IAAIC,MAAMT,EAAOI,IAE7BI,EAAME,SAKDC,EAEE,SAAUC,GAAmB,IAAdC,EAAa,uDAAJ,GAC3B1D,EAAM,IAAI2D,IAAIF,GAGlB,OAFAzD,EAAI4D,OAAS,IAAIC,gBAAgBH,GAE1B1D,G,QCyEA8D,E,YAxFX,WAAYrE,GAAQ,IAAD,8BACf,4CAAMA,KASVsE,aAAe,SAACC,GAEZ,EAAKC,SAAS,CACVC,MAAOF,EAAMG,cAAcD,SAbhB,EAkBnBE,WAAa,SAACJ,GAEVjB,EAAQiB,EAAMG,cAAcE,QAAQvB,OAjBpC,EAAKwB,MAAQ,CACTJ,MAAO,GACPhD,MAAO,IALI,E,sEA2Bf,IAAMqD,EAAOC,KAAKF,MAAMpD,MAAMuD,KAAI,SAASC,EAAMC,GAC7C,OACI,uBAAG7C,IAAK6C,GACJ,4BAAQC,KAAK,SAASlF,UAAU,uBAAuBmF,YAAWH,EAAKI,GAAInF,QAAS6E,KAAKJ,YACrF,kBAAC,IAAD,OAEHM,EAAKI,GAJV,MAIiBJ,EAAKK,MAG3BP,MAEH,OACI,yBAAKQ,MAAOR,KAAK/E,MAAMwF,OAAQvF,UAAU,wBAAwBwF,SAAS,KAAKC,KAAK,SAASC,cAAY,QACrG,yBAAK1F,UAAU,yBACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,gBACX,wBAAIA,UAAU,eAAd,sBACA,4BAAQkF,KAAK,SAASlF,UAAU,QAAQC,QAAS6E,KAAK/E,MAAM4F,kBACxD,0BAAMD,cAAY,QAAlB,UAGR,yBAAK1F,UAAU,kBACX,yBAAKA,UAAU,qBACX,2BAAOkF,KAAK,SACRlF,UAAU,yBACVwE,MAAOM,KAAKF,MAAMJ,MAClBoB,SAAUd,KAAKT,aACfwB,YAAY,oBAGpB,yBAAK7F,UAAU,mBACV6E,IAGT,yBAAK7E,UAAU,gBACX,4BAAQkF,KAAK,SAASlF,UAAU,2BAA2BC,QAAS6E,KAAK/E,MAAM4F,kBAA/E,e,yCASLG,EAAWC,GAAY,IAAD,OAE/BvB,EAAQM,KAAKF,MAAMJ,MAAMhB,OAE3BgB,IAAUuB,EAAUvB,MAAMhB,QAC1BnD,EAAA,UAAYO,EAAKC,YAAjB,kBAAsC2D,IACrC/D,MAAK,SAACC,GACH,EAAK6D,SAAS,CACV/C,MAAOd,EAAS2B,c,GAjFN2D,IAAMC,WC4CrBC,G,kBAzCX,WAAYnG,GAAQ,IAAD,8BACf,4CAAMA,KAUV4F,iBAAmB,WAEf,IAAMQ,EAAwC,SAA9B,EAAKvB,MAAMW,OAAOY,QAAqB,QAAU,OAEjE,EAAK5B,SAAS,CACVgB,OAAQ,CACJY,QAASA,MAdjB,EAAKvB,MAAQ,CACTW,OAAQ,CACJY,QAAS,SALF,E,sEAyBf,OACI,yBAAKb,MAAOR,KAAK/E,MAAMwF,OAAOa,QAASnG,QAAS6E,KAAK/E,MAAMsG,aAAcrG,UAAU,WAC/E,4BAAQA,UAAU,YAAW,kBAAC,IAAD,OAC7B,yBAAKA,UAAU,oBACX,kBAAC,IAAD,CAAMsG,GAAG,gBAAT,eACA,kBAAC,IAAD,CAAMA,GAAG,cAAT,aACA,kBAAC,IAAD,CAAMA,GAAG,gBAAT,eACA,4BAAQpB,KAAK,SAASlF,UAAU,OAAOC,QAAS6E,KAAKa,kBAArD,cACA,kBAAC,IAAD,CAAMW,GAAG,aAAT,aAEJ,kBAAC,EAAD,CAAiBf,OAAQT,KAAKF,MAAMW,OAAQI,iBAAkBb,KAAKa,wB,GArC7DK,IAAMC,YCsDbM,E,YApDX,WAAYxG,GAAQ,IAAD,8BACf,4CAAMA,KAED6E,MAAQ,CACTW,OAAQ,CACJa,QAAS,CAAEI,MAAO,KAI1B,EAAKtG,YAAc,EAAKA,YAAYuG,KAAjB,gBACnB,EAAKJ,aAAe,EAAKA,aAAaI,KAAlB,gBAVL,E,2EAef3B,KAAKP,SAAS,CACVgB,OAAQ,CACJa,QAAS,CAAEI,MAAO,c,qCAO1B1B,KAAKP,SAAS,CACVgB,OAAQ,CACJa,QAAS,CAAEI,MAAO,Q,+BAQ1B,OACI,6BACI,kBAAC,EAAD,CAASjB,OAAQT,KAAKF,MAAMW,OAAQc,aAAcvB,KAAKuB,eACvD,kBAAC,EAAD,CAAYnG,YAAa4E,KAAK5E,iB,0CAQhCkB,EAAMuB,WACRvB,EAAMoB,c,GAhDAwD,IAAMC,WCkGTS,E,YAhGX,WAAY3G,GAAQ,IAAD,8BACf,4CAAMA,KAQV4G,YAAc,SAACjG,GAEX,IAAIkG,EAAkBxF,EAAMuB,UACtBkE,EAAkBC,OAAOC,KAAKH,EAAgBrF,WAAWyF,OAE1DH,GAAmBA,IAAoBnG,EAASsG,SAEjDtG,EAASgB,SAAQ,SAAAC,GACRiF,EAAgBrF,UAAU,SAAWI,EAAQsF,MAC9CL,EAAgBrF,UAAU,SAAWI,EAAQsF,IAAM,OAI3D7F,EAAMoB,QAAQoE,KAnBlB,EAAKhC,MAAQ,CACTzD,QAAS,IAJE,E,sEA4BT,IAECI,EAAaH,EAAMuB,UAAnBpB,UAEPuD,KAAKF,MAAMzD,QAAQ+F,MAAK,SAASC,EAAGC,GAEhC,OAAa,KAATD,EAAEF,GAAkB,EACX,KAATG,EAAEH,IAAmB,EAElBE,EAAEF,GAAKG,EAAEH,MAKpB,IAAIpC,EAAOC,KAAKF,MAAMzD,QAAQ4D,KAAI,SAAUsC,EAAQpC,GAChD,OACI,wBAAI7C,IAAK6C,EAAOjF,UAAU,0BACtB,kBAAC,IAAD,CAAMsG,GAAE,qBAAgBe,EAAOJ,IAAMjH,UAAU,YAC1CqH,EAAOC,MACR,0BAAMtH,UAAU,aACZ,0BAAMA,UAAU,gBACXuB,EAAU,SAAD,OAAU8F,EAAOJ,KAAMD,QAFzC,IAIMK,EAAOE,gBAJb,QAKI,kBAAC,IAAD,YAQpB,OACI,6BACI,kBAAC,EAAD,MACA,yBAAKvH,UAAU,QACX,yBAAKA,UAAU,QACX,wBAAIA,UAAU,+BACT6E,Q,0CASJ,IAAD,OAEhBxE,EAASO,EAAKO,SACbV,MAAK,SAACC,GAIH,OAFA,EAAKiG,YAAYjG,GAEVA,KAGVD,MAAK,SAACC,GAEH,EAAK6D,SAAS,CACVpD,QAAST,W,GA1FEsF,IAAMC,WC2FlBuB,G,kBA1FX,WAAYzH,GAAQ,IAAD,8BACf,4CAAMA,KAUV0H,aAAe,SAACnD,GAAW,IACf+C,EAAW,EAAKtH,MAAMF,MAAMmE,OAA5BqD,OACAJ,EAAO3C,EAAMG,cAAcE,QAA3BsC,GACJL,EAAkBxF,EAAMuB,UACxBpB,EAAYqF,EAAgBrF,UAAhB,gBAAmC8F,IAE/C9F,EAAUmG,QAAQT,GAAM,GACxB1F,EAAUoG,KAAKV,GAGnB7F,EAAMoB,QAAQoE,IArBC,EAwBnBgB,WAAa,SAACtD,GAAW,IACb2C,EAAO3C,EAAMG,cAAcE,QAA3BsC,GACFY,EAAa,EAAKjD,MAAlBiD,SAEFA,EAASH,QAAQT,GAAM,IACvBY,EAASF,MAAMV,GAEf,EAAK1C,SAAS,CACVsD,SAAUA,MA7BlB,EAAKjD,MAAQ,CACTvC,KAAM,GACNd,UAAW,GACXsG,SAAU,IANC,E,sEAuCT,IAAD,EAE2B/C,KAAKF,MAA7BrD,EAFH,EAEGA,UAAWsG,EAFd,EAEcA,SAEfhD,EAAOtD,EAAUwD,KAAI,SAAU+C,EAAU7C,GAEzC,IAAI8C,EAAgBF,EAASH,QAAQI,EAASb,KAAO,EAAI,iBAAmB,GAE5E,OACI,yBAAK7E,IAAK6C,EAAOjF,UAAS,oBAAe+H,IACrC,yBAAK/H,UAAU,aACX,2BAAIiF,EAAM,EAAV,KAAe6C,EAASzC,IACxB,8BAAUrF,UAAU,eAAegI,KAAK,IAAInC,YAAY,gBACxD,iCACI,6BAAS7F,UAAU,SAASiI,UAASH,EAASb,GAAIhH,QAAS6E,KAAK2C,aAAcS,OAAQpD,KAAK8C,YAA3F,WACA,2BAAKE,EAAS1C,SAK/BN,MAGH,OACI,6BACI,kBAAC,EAAD,MACA,yBAAK9E,UAAU,QACT6E,M,0CAOG,IAAD,OAEhBxE,EAAA,UAAYO,EAAKM,aAAjB,gBAAqC4D,KAAK/E,MAAMF,MAAMmE,OAAOqD,SACxD5G,MAAK,SAACC,GAEH,IAAImC,EAAQzB,EAAMuB,UAElB,EAAK4B,SAAS,CACVlC,KAAM3B,EACNa,UAAWb,EAAS2B,KACpBwF,SAAUhF,EAAMtB,UAAN,gBAAyB,EAAKxB,MAAMF,MAAMmE,OAAOqD,SAAUtC,IAAIoD,iB,GArFrEnC,IAAMC,YCAxBmC,EAAQ,CACV,CACI9H,IAAK,eACLgH,MAAO,eAEX,CACIhH,IAAK,aACLgH,MAAO,aAEX,CACIhH,IAAK,eACLgH,MAAO,eAEX,CACIhH,IAAK,YACLgH,MAAO,aAsCAe,E,iLA7BP,IAAMxD,EAAOuD,EAAMrD,KAAI,SAAUC,EAAMC,GACnC,OACI,yBAAK7C,IAAK6C,EAAOjF,UAAU,sBACvB,kBAAC,IAAD,CAAMsG,GAAItB,EAAK1E,KACX,yBAAKN,UAAU,QACX,yBAAKA,UAAU,uBACVgF,EAAKsC,aAQ9B,OACI,6BACI,kBAAC,EAAD,MACA,yBAAKtH,UAAU,QACX,yBAAKA,UAAU,WACV6E,S,GAvBNmB,IAAMC,W,QCGVqC,G,MAxBM,SAACvI,GAAW,IAAD,EACFwI,mBAAS,GADP,mBACrBC,EADqB,KACdC,EADc,KAEtBC,EAAS,8BAAM,kBAAC,IAAD,CAAW1I,UAAU,kBAAkB,0BAAMA,UAAU,YAAYD,EAAM4I,OACxFC,EAAUJ,EAAQE,EAAS3I,EAAM4I,KAcvC,OACI,4BAAQ1I,QAbQ,SAACqE,GACjBA,EAAMG,cAAcoE,OAEpB9I,EAAM+I,OAENL,EAAS,GAETM,aAAY,WACRN,MACD,MAI2BvD,KAAK,SAASlF,UAAU,8EACjD4I,KCoFEI,E,YAlGX,WAAYjJ,GAAQ,IAAD,8BACf,4CAAMA,KASVkJ,qBAAuB,WACnB,IAAIrC,EAAkBxF,EAAMuB,UAE5BiE,EAAgBrF,UAAYH,EAAMC,YAAYE,UAE9CH,EAAMoB,QAAQoE,IAfC,EAmBnBsC,sBAAwB,WACpB,IAAItC,EAAkBxF,EAAMuB,UAE5BiE,EAAgBpF,MAAQJ,EAAMC,YAAYG,MAE1CJ,EAAMoB,QAAQoE,IAxBC,EA4BnBuC,YAAc,WACV,IAAIvC,EAAkBxF,EAAMuB,UAE5BiE,EAAgBtF,OAASsF,EAAgBtF,MAEzCF,EAAMoB,QAAQoE,GAEd,EAAKrC,SAAS,CACVjD,MAAOsF,EAAgBtF,SApCZ,EAyCnB8H,eAAiB,WAEbhI,EAAMoB,WAxCN,EAAKoC,MAAQ,CACTyE,MAAO,EACP/H,OAAO,GALI,E,sEAkDf,OACI,6BACI,kBAAC,EAAD,MACA,yBAAKtB,UAAU,QACX,yBAAKA,UAAU,QACX,wBAAIA,UAAU,+BACV,wBAAIA,UAAU,0BAAd,QAEI,4BAAQkF,KAAK,SAASlF,UAAU,4DAA4DC,QAAS6E,KAAKqE,aACrGrE,KAAKF,MAAMtD,MAAQ,kBAAC,IAAD,MAAiB,kBAAC,IAAD,QAG7C,wBAAItB,UAAU,0BAAd,YAEI,kBAAC,EAAD,CAAc8I,KAAMhE,KAAKmE,qBAAsBN,KAAK,oBAExD,wBAAI3I,UAAU,0BAAd,cAEI,kBAAC,EAAD,CAAc8I,KAAMhE,KAAKoE,sBAAuBP,KAAK,oBAEzD,wBAAI3I,UAAU,0BACV,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YAAf,oCAGA,yBAAKA,UAAU,YACX,kBAAC,EAAD,CAAc8I,KAAMhE,KAAKsE,eAAgBT,KAAK,wB,0CAa9E,IAAM/B,EAAkBxF,EAAMuB,UAE9BmC,KAAKP,SAAS,CACVjD,MAAOsF,EAAgBtF,Y,GA9FZ0E,IAAMC,WCoFdqD,E,YArFX,WAAYvJ,GAAQ,IAAD,8BACf,4CAAMA,KAWVsE,aAAe,SAACC,GAEZ,EAAKC,SAAS,CACVC,MAAOF,EAAMG,cAAcD,SAfhB,EAoBnB+E,eAAiB,WAAgB,IAAfrF,EAAc,uDAAP,GAErB7D,EAAA,UAAYO,EAAKK,eAAjB,kBAAyCiD,EAAOR,QAAQ,OAAQ,OAC3DjD,MAAK,SAACC,GACH,EAAK6D,SAAS,CACV7D,SAAUA,QAtBtB,EAAKkE,MAAQ,CACTlE,SAAU,CACN2B,KAAM,IAEVmC,MAAO,IAPI,E,sEAiCf,IACMgF,EADO,aAAaC,KAAK3E,KAAKF,MAAMJ,MAAMhB,QACzB,CAAC,KAAM,MAAQ,CAAC,KAAM,MAEzCqB,EAAOC,KAAKF,MAAMlE,SAAS2B,KAAK0C,KAAI,SAASC,EAAMC,GACnD,OACI,yBAAK7C,IAAK6C,EAAOjF,UAAU,kBACvB,2BAAIgF,EAAMwE,EAAQ,KAClB,2BAAIxE,EAAMwE,EAAQ,SAK9B,OACI,6BACI,kBAAC,EAAD,MACA,yBAAKxJ,UAAU,QACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,eACX,2BAAQkF,KAAK,SACTlF,UAAU,yBACVwE,MAAOM,KAAKF,MAAMJ,MAClBoB,SAAUd,KAAKT,aACfqF,mBAAiB,iBACjB7D,YAAY,eAEpB,2BAAOoB,GAAG,iBAAiBjH,UAAU,wBAArC,iDAEH6E,M,0CASbC,KAAKyE,mB,yCAIUzD,EAAWC,GAE1B,IAAMvB,EAAQM,KAAKF,MAAMJ,MAAMhB,OAE3BgB,IAAUuB,EAAUvB,MAAMhB,SAAWgB,EAAMwC,OAAS,GAAKxC,EAAMwC,OAAS,IAExElC,KAAKyE,eAAe/E,O,GAjFNwB,IAAMC,WCA1BvB,G,MAAa,SAACJ,GAEhBjB,EAAQiB,EAAMG,cAAcE,QAAQvB,QA8BzBuG,EAzBA,SAAC5J,GAQZ,OALA6J,qBAAU,WACNvG,EAAQtD,EAAMqD,KAAKgC,OAKnB,yBAAKpF,UAAU,aACX,2BAAID,EAAMqD,KAAKgC,IACf,6BACI,4BAAQF,KAAK,SAASlF,UAAU,mCAAmCmF,YAAWpF,EAAMqD,KAAKgC,GAAInF,QAASyE,GAClG,kBAAC,IAAD,QAGR,4BAAQQ,KAAK,SACTlF,UAAU,qCACVC,QAASF,EAAM8J,YAFnB,UCGGC,EA5BF,SAAC/J,GAEV,OACI,yBAAKC,UAAU,aACX,2BAAID,EAAMqD,KAAKiC,IACf,yBAAKrF,UAAU,SACX,2BAAOkF,KAAK,OACRlF,UAAU,yBACV6F,YAAY,iBACZrB,MAAOzE,EAAMyE,MACboB,SAAU,SAACtB,GAAD,OAAWvE,EAAMsE,aAAaC,EAAOvE,EAAMqD,UAE7D,6BACI,4BAAQ8B,KAAK,SACTlF,UAAU,yBACVC,QAAS,kBAAMF,EAAMgK,YAAYhK,EAAMqD,QAF3C,UAKA,4BAAQ8B,KAAK,SACTlF,UAAU,qCACVC,QAASF,EAAM0H,cAFnB,aCRDuC,EAVG,WAGd,OACI,yBAAKhK,UAAU,2DAAf,qBCIFiK,EAAc,CAAChD,GAAG,EAAE5B,GAAG,OAAOD,GAAG,OAAO8E,MAAM,MA6SrCC,E,YAxSX,WAAYpK,GAAQ,IAAD,8BACf,4CAAMA,KAgBVsE,aAAe,SAACC,EAAOlB,GACnB,IAAMoB,EAAQF,EAAMG,cAAcD,MAAMhB,OAAOC,cAE/C,EAAKc,SAAS,CACVC,MAAOF,EAAMG,cAAcD,QAI3BA,IAAUpB,EAAKgC,GAAG5B,OAAOC,eACzB,EAAKsG,YAAY3G,IA1BN,EAgCnB2G,YAAc,SAAC3G,GAAU,IAAD,EAC2C,EAAKwB,MAA9DwF,EADc,EACdA,YAAarI,EADC,EACDA,KAAMH,EADL,EACKA,SAAUyI,EADf,EACeA,UAAWH,EAD1B,EAC0BA,MAAOlI,EADjC,EACiCA,MACjDsI,EAASlJ,EAAMuB,UACfiE,EAAkB0D,EAAO9I,MAAMC,OAAOyI,GAE1C7G,EAAQD,EAAKgC,IAEb,IAAMmF,EAAiB3I,EAAS4I,QAAO,SAAAxF,GAAI,OAAIA,EAAKiC,KAAO7D,EAAK6D,MAEhEmD,IAEArI,IAjDS,IAmDLqI,GAEAxD,EAAgBhF,SAAW2I,EAC3B3D,EAAgB/E,QAAUwI,EAE1B,EAAKI,SAAS7D,EAAiBsD,GAC1BzJ,KAAK,SAAUC,GAEZ,IAAI2B,EAAO3B,EAAS2B,KAAKqI,OAAOhK,EAASmC,MAAMjB,UAE/CkD,KAAKP,SAAS,CACV/C,MAAOa,EACP+H,YAAa,EACb5F,MAAO,GACP5C,SAAUS,EACVN,KAAMA,EACNsI,UAAW3J,EAASmC,MAAMf,MAC1BE,MAAOA,KAGX4E,EAAkBlG,EAASmC,OAEXjB,SAAWS,EAC3BuE,EAAgB7E,KAAOA,EACvB6E,EAAgB5E,MAAQA,EAExBZ,EAAMoB,QAAQ8H,IAEhB7D,KAtBI,kBAyBV,EAAKlC,SAAS,CACV6F,YAAaA,EACb5F,MAAO,GACPzC,KAAMA,EACNH,SAAU2I,KAhFH,EAuFnBV,WAAa,WAAO,IAAD,EACgD,EAAKjF,MAA9DwF,EADS,EACTA,YAAarI,EADJ,EACIA,KAAMH,EADV,EACUA,SAAUyI,EADpB,EACoBA,UAAWH,EAD/B,EAC+BA,MAAOlI,EADtC,EACsCA,MACjDsI,EAASlJ,EAAMuB,UACfiE,EAAkB0D,EAAO9I,MAAMC,OAAOyI,GAE1CE,IACApI,IAnGS,IAqGLoI,GAEAxD,EAAgBhF,SAAWA,EAC3BgF,EAAgB/E,QAAUwI,EAE1B,EAAKI,SAAS7D,EAAiBsD,GAC1BzJ,KAAK,SAAUC,GAEZ,IAAI2B,EAAO3B,EAAS2B,KAAKqI,OAAOhK,EAASmC,MAAMjB,UAE/ClB,EAASmC,MAAMjB,SAAWS,EAC1B3B,EAASmC,MAAMd,KAAOA,EACtBrB,EAASmC,MAAMb,MAAQA,EAGvB8C,KAAKP,SAAS,CACV/C,MAAOa,EACP+H,YAAa,EACbO,iBAAkB,EAClBnG,MAAO,GACPzC,KAAMrB,EAASmC,MAAMd,KACrBH,SAAUS,EACVgI,UAAW3J,EAASmC,MAAMf,MAC1BE,MAAOA,IAGX4E,EAAkBlG,EAASmC,MAE3BzB,EAAMoB,QAAQ8H,IAEhB7D,KAxBI,iBAyBLmE,MAAM,SAAUvI,GAEbyC,KAAKP,SAAS,CACV/C,MAAOa,EACPmC,MAAO,GACPzC,KAAMA,EACNC,MAAOA,KAGbyE,KATK,kBAYX,EAAKlC,SAAS,CACV6F,YAAaA,EACb5F,MAAO,GACPmG,iBAAkB,EAClB3I,MAAOA,KA9IA,EAqJnByF,aAAe,WACX,EAAKlD,SAAS,CACVoG,iBAAkB,KAvJP,EA4JnBF,SAAW,WAA6B,IAA5B5H,EAA2B,uDAAnB,GAAIqH,EAAe,uDAAT,KAE1B,OAAO,IAAIW,SAAQ,SAAUC,EAASC,GAElC,IAAMjJ,EAtKD,EAsKoBe,EAAMjB,SAASoF,OAExC,GAAIlF,EAAO,CAEP,IAAIiC,EAAMD,EAAgBlD,EAAKG,SAAU,CACrCe,MAAOA,EACPD,OAAQgB,EAAMhB,OACdqI,MAAOA,IAGX7J,EAAS0D,GACJtD,MAAK,SAACC,GAEHmC,EAAMf,MAAQA,EAEdgJ,EAAQ,CAACzI,KAAM3B,EAAUmC,MAAOA,YAKxCkI,EAAOlI,EAAMjB,cApLN,EA2LnBoJ,YAAc,SAACd,GACX,IAAMrH,EAAQzB,EAAMuB,UAEpBuH,EAAQA,GAASrH,EAAMrB,MAAMU,aAE7B,EAAKuI,SAAS5H,EAAMrB,MAAMC,OAAOyI,GAAQA,GACpCzJ,KAAK,SAAUC,GAEZ,IAAI2B,EAAO3B,EAAS2B,KAAKqI,OAAOhK,EAASmC,MAAMjB,UAC/ClB,EAASmC,MAAMjB,SAAWS,EAE1ByC,KAAKP,SAAS,CACV/C,MAAOa,EACPN,KAAMrB,EAASmC,MAAMd,KACrBsI,UAAW3J,EAASmC,MAAMf,MAC1BF,SAAUS,EACV6H,MAAOA,EACPlI,MAAOtB,EAASmC,MAAMb,QAG1Ba,EAAMrB,MAAMC,OAAOyI,GAASxJ,EAASmC,MACrCA,EAAMrB,MAAMU,aAAegI,EAE3B9I,EAAMoB,QAAQK,IAEhB4D,KAnBI,iBAoBLmE,MAAM,SAAUvI,GAEbyC,KAAKP,SAAS,CACV/C,MAAOa,EACPN,KAAMc,EAAMrB,MAAMC,OAAOyI,GAAOnI,KAChCH,SAAUS,EACVgI,UAAWxH,EAAMrB,MAAMC,OAAOyI,GAAOpI,MACrCoI,MAAOA,EACPlI,MAAOa,EAAMrB,MAAMC,OAAOyI,GAAOlI,SAGvCyE,KAXK,kBArNI,EAoOnBwE,kBAAoB,SAAC3G,GAEjB,EAAK0G,YAAY1G,EAAMG,cAAcD,MAAMhB,SAnO3C,EAAKoB,MAAQ,CACTpD,MAAO,GACP4I,YAAa,EACb5F,MAAO,GACPmG,iBAAkB,EAClB5I,KAAM,EACNsI,UAAW,EACXzI,SAAU,GACVsI,MAAO,KACPlI,MAAO,GAZI,E,sEA6Of,IAAMoB,EAAO0B,KAAKF,MAAMpD,MAAMsD,KAAKF,MAAMwF,cAAgBH,EAFpD,EAG+BnF,KAAKF,MAAjCsF,EAHH,EAGGA,MAAOS,EAHV,EAGUA,iBACTO,EAAOpG,KAAKF,MAAMpD,MAAMwF,OAAS2D,EAAmB,EACpDlJ,EAASrB,EAAO2E,KAAI,SAASuC,EAAOrC,GACtC,OAAO,4BAAQ7C,IAAK6C,EAAOT,MAAO8C,GAASA,MAGzC6D,EAAa,CAEX,kBAAC,EAAD,CAAM9G,aAAcS,KAAKT,aACrB0F,YAAajF,KAAKiF,YAClBtC,aAAc3C,KAAK2C,aACnBjD,MAAOM,KAAKF,MAAMJ,MAClBpB,KAAMA,IAGV,kBAAC,EAAD,CAAQyG,WAAY/E,KAAK+E,WAAYzG,KAAMA,IAG3C,kBAAC,EAAD,OAKR,OACI,6BACI,kBAAC,EAAD,MACA,yBAAKpD,UAAU,QACX,yBAAKA,UAAU,oBACX,0BAAMA,UAAU,WAAWoD,EAAK6D,IAChC,0BAAMjH,UAAU,SAAS8E,KAAKF,MAAMwF,YAAc,GAEjDe,EAAWD,IAEhB,yBAAKlL,UAAU,QACX,oCAAU8E,KAAKF,MAAM7C,MACrB,qCAAW+C,KAAKF,MAAM5C,OACtB,2CAxRP,IA0RG,yBAAKhC,UAAU,QACX,yCACA,4BAAQA,UAAU,eAAewE,MAAO0F,EAAOtE,SAAUd,KAAKmG,mBACzDxJ,Q,0CAWrBqD,KAAKkG,kB,GApSYhF,IAAMC,WCMhBmF,EAXA,kBACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWlD,IACjC,kBAAC,IAAD,CAAOgD,OAAK,EAACC,KAAK,aAAaC,UAAW7E,IAC1C,kBAAC,IAAD,CAAO4E,KAAK,qBAAqBC,UAAW/D,IAC5C,kBAAC,IAAD,CAAO8D,KAAK,YAAYC,UAAWvC,IACnC,kBAAC,IAAD,CAAOsC,KAAK,eAAeC,UAAWjC,IACtC,kBAAC,IAAD,CAAOgC,KAAK,eAAeC,UAAWpB,MCR9CqB,IAASC,OAED,kBAAC,IAAD,CAAQC,SAAUC,qBACd,kBAAC,EAAD,OAGRC,SAASC,eAAe,SlBqHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvL,MAAK,SAAAwL,GACjCA,EAAaC,kB","file":"static/js/main.0adc3ab6.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { IoIosMenu } from 'react-icons/io';\nimport './Navigation.css';\n\nconst Navigation = (props) => {\n\n    return (\n        <div className=\"navigation\">\n            <button onClick={props.openSidebar} className=\"btnMenu\"><IoIosMenu /></button>\n        </div>\n    );\n};\n\nexport default Navigation;","/**\n * API routes\n * \n * words/search?value={search}\n * words/read/{limit}/{level?} - pagination\n * words/get?limit={int}&offset={int}&level={str}\n * phrases/read/{limit} - pagination\n * exercises/search?value={search}\n * exercises/read/{limit}/{lesson?} - pagination\n * lessons\n */\n\nconst apiUri = 'https://summertime-sadness.herokuapp.com/api/';\n\n\nexport const Levels = ['A1', 'A2', 'B1', 'B2', 'B2.2', 'C1'];\n\n\nconst wordsLocal = function () {\n    let words = {};\n\n    Levels.forEach(element => {\n        words[element] = {\n            dontKnow: [],\n            offset: 0,\n            limit: 0,\n            know: 0,\n            wrong: 0\n        };\n    });\n\n    return words;\n};\n\n\nexport const Data = {\n\n    get: function(uri, options={}) {\n        \n        return fetch(uri, options)\n            .then((response) => {\n                return response.json();\n            });\n    }\n};\n\n\nexport const Uris = {\n\n    wordsSearch: apiUri + 'words/search',\n    wordsRead: apiUri + 'words/read',\n    wordsGet: apiUri + 'words/get',\n    phrasesRead: apiUri + 'phrases/read',\n    exrcisesSearch: apiUri + 'exercises/search',\n    exrcisesRead: apiUri + 'exercises/read',\n    lessons: apiUri + 'lessons',\n\n};\n\n\nexport const Local = {\n\n    defaultData: {\n        sound: true,\n        exercises: {},\n        words: {\n            levels: wordsLocal(),\n            currentLevel: 'A1'\n        }\n    },\n\n    setItem: function(key, data) {\n        localStorage.setItem(key, data);\n    },\n\n    getItem: function(key) {\n        return localStorage.getItem(key);\n    },\n\n    setData: function (data = Local.defaultData, key = 'learningEnglish') {\n        localStorage.setItem(key, JSON.stringify(data));\n    },\n\n    getData: function (key='', keyLocal = 'learningEnglish') {\n        const local = JSON.parse(localStorage.getItem(keyLocal));\n\n        if (key) {\n\n            return key.split('/').reduce((o, i) => o[i], local);\n        }\n\n        return local;\n    }\n};\n\n","import { Local } from './Data';\n\nexport const getMp3 = (word) => `https://b0r1slav.github.io/pronunciation/mp3/${word}.mp3`;\n\n\nexport const playMp3 = (str='') => {\n    const sound = Local.getData('sound');\n\n    if (sound) {\n        let mp3Name = str.trim().toLowerCase().replace(/[^a-zA-Z]+/, '_');\n        let audio = new Audio(getMp3(mp3Name));\n\n        audio.play();\n    }\n};\n\n\nexport const myUrl = {\n\n    setParams: function (url, params = {}) {\n        let uri = new URL(url);\n        uri.search = new URLSearchParams(params);\n\n        return uri;\n    }\n};","import React from 'react';\nimport { Data, Uris } from './Data';\nimport { playMp3 } from './helpers';\nimport { FaVolumeUp } from 'react-icons/fa';\n\n\nclass ModalDictionary extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: '',\n            words: [],\n        }\n    }\n\n\n    handleChange = (event) => {\n\n        this.setState({\n            value: event.currentTarget.value\n        });\n    };\n\n\n    handlePlay = (event) => {\n\n        playMp3(event.currentTarget.dataset.word);\n\n    };\n\n\n    render() {\n\n        const list = this.state.words.map(function(item, index) {\n            return (\n                <p key={index}>\n                    <button type=\"button\" className=\"text-primary pronons\" data-word={item.en} onClick={this.handlePlay}>\n                        <FaVolumeUp /> \n                    </button> \n                    {item.en} - {item.bg} \n                </p>\n            );\n        }, this);\n\n        return (\n            <div style={this.props.styles} className=\"modal bootstrap-modal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n                <div className=\"modal-dialog modal-lg\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h6 className=\"modal-title\">Dictionary A1 - C1</h6>\n                            <button type=\"button\" className=\"close\" onClick={this.props.handleDictionary}>\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body P-5\">\n                            <div className=\"input-group M-B10\">\n                                <input type=\"search\" \n                                    className=\"form-control rounded-0\" \n                                    value={this.state.value} \n                                    onChange={this.handleChange} \n                                    placeholder=\"Enter word ...\" />\n                            </div>\n\n                            <div className=\"search-response\">\n                                {list}\n                            </div>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button type=\"button\" className=\"btn btn-sm btn-secondary\" onClick={this.props.handleDictionary}>Close</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n\n    componentDidUpdate(prevProps, prevState) {\n\n        const value = this.state.value.trim();\n\n        if (value !== prevState.value.trim()) {\n            Data.get(`${Uris.wordsSearch}?value=${value}`)\n            .then((response) => {\n                this.setState({\n                    words: response.data\n                });\n            });\n        }\n        \n    }\n\n}\n\nexport default ModalDictionary;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { IoIosArrowBack } from 'react-icons/io';\nimport ModalDictionary from '../ModalDictionary';\nimport './Sidebar.css';\n\n\nclass Sidebar extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            styles: {\n                display: 'none'\n            }\n        }\n    }\n\n\n    handleDictionary = () => {\n\n        const display = this.state.styles.display === 'none' ? 'block' : 'none';\n\n        this.setState({\n            styles: {\n                display: display\n            }\n        });\n    };\n\n\n    render() {\n\n        return (\n            <div style={this.props.styles.sidebar} onClick={this.props.closeSidebar} className=\"sidebar\">\n                <button className=\"btnClose\"><IoIosArrowBack /></button>\n                <div className=\"sidebarContainer\">\n                    <Link to=\"/learn-words\">Learn Words</Link>\n                    <Link to=\"/exercises\">Exercises</Link>\n                    <Link to=\"/expressions\">Expressions</Link>\n                    <button type=\"button\" className=\"link\" onClick={this.handleDictionary}>Dictionary</button>\n                    <Link to=\"/settings\">Settings</Link>\n                </div>\n                <ModalDictionary styles={this.state.styles} handleDictionary={this.handleDictionary} />\n            </div>\n        );\n    }\n}\n\nexport default Sidebar;","import React from 'react';\nimport './App.css';\nimport Navigation from './common/navigation/Navigation';\nimport Sidebar from './common/sidebar/Sidebar';\nimport { Local } from './common/Data';\n\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            styles: {\n                sidebar: { width: 0 }\n            }\n        };\n\n        this.openSidebar = this.openSidebar.bind(this);\n        this.closeSidebar = this.closeSidebar.bind(this);\n    }\n\n\n    openSidebar() {\n        this.setState({\n            styles: {\n                sidebar: { width: '250px' }\n            }\n        });\n    }\n\n\n    closeSidebar() {\n        this.setState({\n            styles: {\n                sidebar: { width: 0 }\n            }\n        });\n    }\n\n\n    render() {\n\n        return (\n            <div>\n                <Sidebar styles={this.state.styles} closeSidebar={this.closeSidebar} />\n                <Navigation openSidebar={this.openSidebar} />\n            </div>\n        );\n    }\n\n\n    componentDidMount() {\n\n        if( ! Local.getData() ) {\n            Local.setData();\n        }\n    }\n}\n\n\nexport default App;\n","import React from 'react';\nimport App from '../App';\nimport { IoIosArrowForward } from 'react-icons/io';\nimport { Data, Uris, Local } from '../common/Data';\nimport { Link } from 'react-router-dom';\n\n\nclass ExercisesNav extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            lessons: []\n        };\n    }\n\n\n    handleLocal = (response) => {\n\n        let learningEnglish = Local.getData();\n        const exercisesLength = Object.keys(learningEnglish.exercises).length;\n\n        if (!exercisesLength || exercisesLength !== response.length) {\n\n            response.forEach(element => {\n                if (!learningEnglish.exercises['lesson' + element.id]) {\n                    learningEnglish.exercises['lesson' + element.id] = [];\n                }\n            });\n\n            Local.setData(learningEnglish);\n        }\n\n    };\n\n\n    render() {\n\n        const {exercises} = Local.getData();\n\n        this.state.lessons.sort(function(a, b) {\n\n            if (a.id === 18) return 1;\n            if (b.id === 18) return -1;\n\n            return a.id - b.id;\n\n        });\n\n\n        let list = this.state.lessons.map(function (lesson, index) {\n            return (\n                <li key={index} className=\"list-group-item li-nav\">\n                    <Link to={`/exercises/${lesson.id}`} className=\"nav-item\">\n                        {lesson.title}\n                        <span className=\"itemRight\">\n                            <span className=\"text-success\">\n                                {exercises[`lesson${lesson.id}`].length}\n                            </span>\n                            /{lesson.exercises_count} &nbsp;\n                            <IoIosArrowForward />\n                        </span>\n                    </Link>\n                </li>\n            );\n        });\n\n\n        return (\n            <div>\n                <App />\n                <div className=\"main\">\n                    <div className=\"card\">\n                        <ul className=\"list-group list-group-flush\">\n                            {list}\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n\n    componentDidMount() {\n\n        Data.get(Uris.lessons)\n        .then((response) => {\n\n            this.handleLocal(response);\n\n            return response;\n\n        })\n        .then((response) => {\n\n            this.setState({\n                lessons: response\n            });\n\n        });\n    }\n\n}\n\nexport default ExercisesNav;","import React from 'react';\nimport App from '../App';\nimport { Data, Uris, Local } from '../common/Data';\nimport '../common/common.css';\n\n\nclass Exercises extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: {},\n            exercises: [],\n            answered: []\n        };\n    }\n\n\n    handleAnswer = (event) => {\n        const { lesson } = this.props.match.params;\n        const { id } = event.currentTarget.dataset;\n        let learningEnglish = Local.getData();\n        let exercises = learningEnglish.exercises[`lesson${lesson}`];\n\n        if (exercises.indexOf(id) < 0) {\n            exercises.push(id);\n        }\n\n        Local.setData(learningEnglish);\n    };\n\n    handleBlur = (event) => {\n        const { id } = event.currentTarget.dataset;\n        let { answered } = this.state;\n\n        if (answered.indexOf(id) < 0) {\n            answered.push(+id);\n\n            this.setState({\n                answered: answered\n            });\n        }\n\n    };\n\n\n    render() {\n\n        const { exercises, answered } = this.state;\n\n        let list = exercises.map(function (exercise, index) {\n\n            let classAnswered = answered.indexOf(exercise.id) > -1 ? 'text-secondary' : '';\n\n            return (\n                <div key={index} className={`card item ${classAnswered}`} >\n                    <div className=\"card-body\">\n                        <p>{index+1}. {exercise.bg}</p>\n                        <textarea className=\"form-control\" rows=\"2\" placeholder=\"Your answer\"></textarea>\n                        <details>\n                            <summary className=\"answer\" data-id={exercise.id} onClick={this.handleAnswer} onBlur={this.handleBlur}>Compare</summary>\n                            <p>{ exercise.en }</p>\n                        </details>\n                    </div>\n                </div>\n            );\n        }, this);\n\n\n        return (\n            <div>\n                <App />\n                <div className=\"main\">\n                    { list }\n                </div>\n            </div>\n        );\n    }\n\n\n    componentDidMount() {\n\n        Data.get(`${Uris.exrcisesRead}/200/${this.props.match.params.lesson}`)\n            .then((response) => {\n\n                let local = Local.getData();\n\n                this.setState({\n                    data: response,\n                    exercises: response.data,\n                    answered: local.exercises[`lesson${this.props.match.params.lesson}`].map(Number)\n                });\n            });\n    }\n\n}\n\nexport default Exercises;","import React from 'react';\nimport App from './App';\nimport { Link } from 'react-router-dom';\nimport './common/common.css';\n\n\nconst items = [\n    {\n        uri: '/learn-words',\n        title: 'Learn Words'\n    },\n    {\n        uri: '/exercises',\n        title: 'Exercises'\n    },\n    {\n        uri: '/expressions',\n        title: 'Expressions'\n    },\n    {\n        uri: '/settings',\n        title: 'Settings'\n    }\n];\n\n\nclass Home extends React.Component {\n\n    render() {\n\n        const list = items.map(function (item, index) {\n            return (\n                <div key={index} className=\"col-sm-4 col-6 P-5\">\n                    <Link to={item.uri}>\n                        <div className=\"card\">\n                            <div className=\"card-body home-item\">\n                                {item.title}\n                            </div>\n                        </div>\n                    </Link>\n                </div>\n            );\n        });\n\n        return (\n            <div>\n                <App />\n                <div className=\"main\">\n                    <div className=\"row M-0\">\n                        {list}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n\n}\n\nexport default Home;","import React, { useState } from 'react';\nimport { FaSpinner } from 'react-icons/fa';\nimport './ButtonLoader.css'\n\n\nconst ButtonLoader = (props) => {\n    const [click, setClick] = useState(0);\n    const loader = <span><FaSpinner className=\"i-spin loader\" /><span className=\"btn-text\">{props.text}</span></span>;\n    const content = click ? loader : props.text;\n\n    const handleClick = (event) => {\n        event.currentTarget.blur();\n\n        props.func();\n\n        setClick(1);\n\n        setInterval(function(){\n            setClick()\n        }, 1000);\n    };\n\n    return (\n        <button onClick={handleClick} type=\"button\" className=\"button-loader btn btn-sm btn-outline-primary float-right position-relative\">\n            {content}\n        </button>\n    );\n};\n\nexport default ButtonLoader;","import React from 'react';\nimport App from '../../App';\nimport '../common.css';\nimport ButtonLoader from '../../components/ButtonLoader';\nimport { Local } from '../Data';\nimport { FaVolumeUp, FaVolumeMute } from 'react-icons/fa';\n\n\nclass Settings extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            reset: 0,\n            sound: true\n        };\n    }\n\n\n    handleResetExercises = () => {\n        let learningEnglish = Local.getData();\n\n        learningEnglish.exercises = Local.defaultData.exercises;\n\n        Local.setData(learningEnglish);\n    };\n\n\n    handleResetLearnWords = () => {\n        let learningEnglish = Local.getData();\n\n        learningEnglish.words = Local.defaultData.words;\n\n        Local.setData(learningEnglish);\n    };\n\n\n    handleSound = () => {\n        let learningEnglish = Local.getData();\n\n        learningEnglish.sound = !learningEnglish.sound;\n\n        Local.setData(learningEnglish);\n\n        this.setState({\n            sound: learningEnglish.sound\n        });\n    };\n\n\n    handleResetAll = () => {\n        \n        Local.setData();\n\n    };\n\n\n    render() {\n\n        return (\n            <div>\n                <App />\n                <div className=\"main\">\n                    <div className=\"card\">\n                        <ul className=\"list-group list-group-flush\">\n                            <li className=\"list-group-item li-nav\">\n                                Sound\n                                <button type=\"button\" className=\"btn btn-sm btn-outline-primary rounded-circle float-right\" onClick={this.handleSound}>\n                                    {this.state.sound ? <FaVolumeUp /> : <FaVolumeMute />}\n                                </button>\n                            </li>\n                            <li className=\"list-group-item li-nav\">\n                                Exercises\n                                <ButtonLoader func={this.handleResetExercises} text=\"reset progress\" />\n                            </li>\n                            <li className=\"list-group-item li-nav\">\n                                Learn Words\n                                <ButtonLoader func={this.handleResetLearnWords} text=\"reset progress\" />\n                            </li>\n                            <li className=\"list-group-item li-nav\">\n                                <div className=\"row\">\n                                    <div className=\"col-sm-6\">\n                                        Reset all progress and settings!\n                                    </div>\n                                    <div className=\"col-sm-6\">\n                                        <ButtonLoader func={this.handleResetAll} text=\"hard reset\" />\n                                    </div>\n                                </div>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n\n    componentDidMount() {\n        const learningEnglish = Local.getData();\n\n        this.setState({\n            sound: learningEnglish.sound\n        });\n    }\n\n}\n\nexport default Settings;","import React from 'react';\nimport App from '../App';\nimport { Data, Uris } from '../common/Data';\n\n\nclass Expressions extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            response: {\n                data: []\n            },\n            value: ''\n        };\n    }\n\n\n    handleChange = (event) => {\n\n        this.setState({\n            value: event.currentTarget.value\n        });\n    };\n\n\n    getExpressions = (search='') => {\n\n        Data.get(`${Uris.exrcisesSearch}?value=${search.replace(/\\s+/g, '+')}`)\n            .then((response) => {\n                this.setState({\n                    response: response,\n                });\n            });\n    };\n\n\n    render() {\n\n        const test = /^[a-zA-Z]+/.test(this.state.value.trim());\n        const sorting = test ? ['en', 'bg'] : ['bg', 'en'];\n\n        let list = this.state.response.data.map(function(item, index) {\n            return (\n                <div key={index} className=\"card item P-10\">\n                    <p>{item[ sorting[0] ]}</p>\n                    <p>{item[ sorting[1] ]}</p>\n                </div>\n            );\n        });\n\n        return (\n            <div>\n                <App />\n                <div className=\"main\">\n                    <div className=\"card item P-10\">\n                        <div className=\"input-group\">\n                            <input  type=\"search\" \n                                className=\"form-control rounded-0\" \n                                value={this.state.value} \n                                onChange={this.handleChange} \n                                aria-describedby=\"expressionHelp\"\n                                placeholder=\"Search...\" />\n                        </div>\n                        <small id=\"expressionHelp\" className=\"form-text text-muted\">Please enter at least 3 characters to search</small>\n                    </div>\n                    {list}\n                </div>\n            </div>\n        );\n    }\n\n\n    componentDidMount() {\n\n        this.getExpressions();\n    }\n\n\n    componentDidUpdate(prevProps, prevState) {\n\n        const value = this.state.value.trim();\n\n        if (value !== prevState.value.trim() && (value.length > 2 || value.length < 1) ) {\n\n            this.getExpressions(value);\n        }\n\n    }\n}\n\nexport default Expressions;","import React, { useEffect } from 'react';\nimport { FaVolumeUp } from 'react-icons/fa';\nimport { playMp3 } from '../common/helpers';\n\n\nconst handlePlay = (event) => {\n\n    playMp3(event.currentTarget.dataset.word);\n\n};\n\n\nconst Answer = (props) => {\n\n\n    useEffect(() => {\n        playMp3(props.word.en);\n    });\n\n\n    return (\n        <div className=\"card-body\">\n            <p>{props.word.en}</p>\n            <div>\n                <button type=\"button\" className=\"text-primary pronons M-T10 M-B15\" data-word={props.word.en} onClick={handlePlay}>\n                    <FaVolumeUp />\n                </button>\n            </div>\n            <button type=\"button\"\n                className=\"btn btn-primary btn-sm float-right\"\n                onClick={props.handleNext}>\n                Next\n            </button>\n        </div>\n    );\n}\n\nexport default Answer;","import React from 'react';\n\n\nconst Quiz = (props) => {\n    \n    return (\n        <div className=\"card-body\">\n            <p>{props.word.bg}</p>\n            <div className=\"M-B15\">\n                <input type=\"text\"\n                    className=\"form-control rounded-0\"\n                    placeholder=\"Your answer...\"\n                    value={props.value}\n                    onChange={(event) => props.handleChange(event, props.word)} />\n            </div>\n            <div>\n                <button type=\"button\"\n                    className=\"btn btn-primary btn-sm\"\n                    onClick={() => props.handleIKnow(props.word)}>\n                    I know\n                    </button>\n                <button type=\"button\"\n                    className=\"btn btn-primary btn-sm float-right\"\n                    onClick={props.handleAnswer}>\n                    Answer\n                    </button>\n            </div>\n        </div>\n    );\n};\n\nexport default Quiz;","import React from 'react';\n\n\nconst Completed = () => {\n\n\n    return (\n        <div className=\"card card-body h-100 justify-content-center text-center\">\n            Level completed!\n        </div>\n    );\n}\n\nexport default Completed;","import React from 'react';\nimport App from '../App';\nimport { Data, Uris, Local, Levels } from '../common/Data';\nimport { myUrl, playMp3 } from '../common/helpers';\nimport './LearnWords.css';\nimport Answer from './Answer';\nimport Quiz from './Quiz';\nimport Completed from './Completed';\n\n\nconst setCount = 9;\nconst deafultWord = {id:0,bg:'----',en:'----',level:'--'};\n\n\nclass LearnWords extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            words: [],\n            currentWord: 0,\n            value: '',\n            currentComponent: 0,\n            know: 0,\n            lastLimit: 0,\n            dontKnow: [],\n            level: 'A1',\n            wrong: 0\n        };\n    }\n\n\n    handleChange = (event, word) => {\n        const value = event.currentTarget.value.trim().toLowerCase();\n\n        this.setState({\n            value: event.currentTarget.value\n        });\n\n\n        if (value === word.en.trim().toLowerCase()) {\n            this.handleIKnow(word);\n        }\n\n    };\n\n\n    handleIKnow = (word) => {\n        let { currentWord, know, dontKnow, lastLimit, level, wrong } = this.state;\n        let localS = Local.getData();\n        let learningEnglish = localS.words.levels[level];\n\n        playMp3(word.en);\n\n        const dontKnowFilter = dontKnow.filter(item => item.id !== word.id);\n\n        currentWord++;\n\n        know++;\n\n        if (currentWord === setCount) {\n\n            learningEnglish.dontKnow = dontKnowFilter;\n            learningEnglish.offset += lastLimit;\n\n            this.getWords(learningEnglish, level)\n                .then(function (response) {\n\n                    let data = response.data.concat(response.local.dontKnow)\n\n                    this.setState({\n                        words: data,\n                        currentWord: 0,\n                        value: '',\n                        dontKnow: data,\n                        know: know,\n                        lastLimit: response.local.limit,\n                        wrong: wrong\n                    });\n\n                    learningEnglish = response.local;\n\n                    learningEnglish.dontKnow = data;\n                    learningEnglish.know = know;\n                    learningEnglish.wrong = wrong;\n\n                    Local.setData(localS);\n\n                }.bind(this));\n\n        } else {\n            this.setState({\n                currentWord: currentWord,\n                value: '',\n                know: know,\n                dontKnow: dontKnowFilter\n            });\n        }\n\n    };\n\n\n    handleNext = () => {\n        let { currentWord, know, dontKnow, lastLimit, level, wrong } = this.state;\n        let localS = Local.getData();\n        let learningEnglish = localS.words.levels[level];\n\n        currentWord++;\n        wrong++;\n\n        if (currentWord === setCount) {\n\n            learningEnglish.dontKnow = dontKnow;\n            learningEnglish.offset += lastLimit;\n\n            this.getWords(learningEnglish, level)\n                .then(function (response) {\n\n                    let data = response.data.concat(response.local.dontKnow);\n\n                    response.local.dontKnow = data;\n                    response.local.know = know;\n                    response.local.wrong = wrong;\n\n\n                    this.setState({\n                        words: data,\n                        currentWord: 0,\n                        currentComponent: 0,\n                        value: '',\n                        know: response.local.know,\n                        dontKnow: data,\n                        lastLimit: response.local.limit,\n                        wrong: wrong,\n                    });\n\n                    learningEnglish = response.local;\n\n                    Local.setData(localS);\n\n                }.bind(this))\n                .catch(function (data) {\n\n                    this.setState({\n                        words: data,\n                        value: '',\n                        know: know,\n                        wrong: wrong\n                    });\n\n                }.bind(this));;\n\n        } else {\n            this.setState({\n                currentWord: currentWord,\n                value: '',\n                currentComponent: 0,\n                wrong: wrong\n            });\n        }\n\n    };\n\n\n    handleAnswer = () => {\n        this.setState({\n            currentComponent: 1\n        });\n    };\n\n\n    getWords = (local = {}, level=null) => {\n\n        return new Promise(function (resolve, reject) {\n\n            const limit = setCount - local.dontKnow.length;\n\n            if (limit) {\n\n                let url = myUrl.setParams(Uris.wordsGet, {\n                    limit: limit,\n                    offset: local.offset,\n                    level: level\n                });\n\n                Data.get(url)\n                    .then((response) => {\n\n                        local.limit = limit;\n\n                        resolve({data: response, local: local});\n\n                    });\n            } else {\n\n                reject(local.dontKnow);\n            }\n\n        });\n    };\n\n\n    handleLevel = (level) => {\n        const local = Local.getData();\n        \n        level = level || local.words.currentLevel;\n\n        this.getWords(local.words.levels[level], level)\n            .then(function (response) {\n\n                let data = response.data.concat(response.local.dontKnow);\n                response.local.dontKnow = data;\n\n                this.setState({\n                    words: data,\n                    know: response.local.know,\n                    lastLimit: response.local.limit,\n                    dontKnow: data,\n                    level: level,\n                    wrong: response.local.wrong\n                });\n\n                local.words.levels[level] = response.local;\n                local.words.currentLevel = level;\n\n                Local.setData(local);\n\n            }.bind(this))\n            .catch(function (data) {\n\n                this.setState({\n                    words: data,\n                    know: local.words.levels[level].know,\n                    dontKnow: data,\n                    lastLimit: local.words.levels[level].limit,\n                    level: level,\n                    wrong: local.words.levels[level].wrong\n                });\n\n            }.bind(this));\n    };\n\n\n    handleChangeLevel = (event) => {\n\n        this.handleLevel(event.currentTarget.value.trim());\n\n    };\n\n\n    render() {\n\n        const word = this.state.words[this.state.currentWord] || deafultWord;\n        const { level, currentComponent } = this.state;\n        const comp = this.state.words.length ? currentComponent : 2;\n        const levels = Levels.map(function(title, index) {\n            return <option key={index} value={title} >{title}</option>\n        });\n\n        const components = [\n            (\n                <Quiz handleChange={this.handleChange}\n                    handleIKnow={this.handleIKnow}\n                    handleAnswer={this.handleAnswer}\n                    value={this.state.value}\n                    word={word} />\n            ),\n            (\n                <Answer handleNext={this.handleNext} word={word} />\n            ),\n            (\n                <Completed />\n            )\n        ];\n\n\n        return (\n            <div>\n                <App />\n                <div className=\"main\">\n                    <div className=\"card item MH-180\" >\n                        <span className=\"word-id\">{word.id}</span>\n                        <span className=\"index\">{this.state.currentWord + 1}</span>\n\n                        {components[comp]}\n                    </div>\n                    <div className=\"M-10\">\n                        <p>Know: {this.state.know}</p>\n                        <p>Wrong: {this.state.wrong}</p>\n                        <p>Set's count: {setCount}</p>\n                    </div>\n                    <div className=\"P-10\">\n                        <span>Level: </span>\n                        <select className=\"select-level\" value={level} onChange={this.handleChangeLevel}>\n                            {levels}\n                        </select>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n\n    componentDidMount() {\n\n        this.handleLevel();\n\n    }\n\n}\n\nexport default LearnWords;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport ExercisesNav from './exercises/ExercisesNav';\nimport Exercises from './exercises/Exercises';\nimport Home from './Home';\nimport Settings from './common/settings/Settings';\nimport Expressions from './expressions/Expressions';\nimport LearnWords from './words/LearnWords';\n\nconst Routes = () => (\n    <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/exercises\" component={ExercisesNav} />\n        <Route path=\"/exercises/:lesson\" component={Exercises} />\n        <Route path=\"/settings\" component={Settings} />\n        <Route path=\"/expressions\" component={Expressions} />\n        <Route path=\"/learn-words\" component={LearnWords} />\n    </Switch>\n);\n\nexport default Routes;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Routes from './Routes';\n\nReactDOM.render(\n    (\n        <Router basename={process.env.PUBLIC_URL}>\n            <Routes />\n        </Router>\n    ),\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}