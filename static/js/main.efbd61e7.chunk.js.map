{"version":3,"sources":["serviceWorker.js","common/navigation/Navigation.js","common/Data.js","common/helpers.js","common/ModalDictionary.js","common/sidebar/Sidebar.js","App.js","exercises/ExercisesNav.js","exercises/Exercises.js","Home.js","components/ButtonLoader.js","common/settings/Settings.js","expressions/Expressions.js","words/Answer.js","words/Quiz.js","words/LearnWords.js","Routes.js","index.js"],"names":["Boolean","window","location","hostname","match","Navigation","props","className","onClick","openSidebar","apiUri","Data","uri","options","fetch","then","response","json","Uris","wordsSearch","wordsRead","wordsGet","phrasesRead","exrcisesSearch","exrcisesRead","lessons","Local","defaultData","sound","exercises","words","dontKnow","offset","setItem","key","data","localStorage","getItem","setData","JSON","stringify","getData","parse","getMp3","word","playMp3","str","mp3Name","trim","toLowerCase","replace","audio","Audio","play","myUrl","url","params","URL","search","URLSearchParams","ModalDictionary","handleChange","event","setState","value","currentTarget","handlePlay","dataset","state","list","this","map","item","index","type","data-word","en","bg","style","styles","tabIndex","role","aria-hidden","handleDictionary","onChange","placeholder","prevProps","prevState","React","Component","Sidebar","display","sidebar","closeSidebar","to","App","width","bind","ExercisesNav","handleLocal","learningEnglish","exercisesLength","Object","keys","length","forEach","element","id","sort","a","b","lesson","title","exercises_count","Exercises","handleAnswer","indexOf","push","handleBlur","answered","exercise","classAnswered","rows","data-id","onBlur","local","Number","items","Home","ButtonLoader","useState","click","setClick","loader","text","content","blur","func","setInterval","Settings","handleResetExercises","handleResetLearnWords","handleSound","reset","Expressions","getExpressions","sorting","test","aria-describedby","Answer","useEffect","handleNext","Quiz","handleIKnow","LearnWords","currentWord","filter","getWords","concat","answer","catch","Promise","resolve","reject","limit","level","compQuiz","compAnswer","Routes","exact","path","component","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.efbd61e7.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { IoIosMenu } from 'react-icons/io';\nimport './Navigation.css';\n\nconst Navigation = (props) => {\n\n    return (\n        <div className=\"navigation\">\n            <button onClick={props.openSidebar} className=\"btnMenu\"><IoIosMenu /></button>\n        </div>\n    );\n};\n\nexport default Navigation;","/**\n * API routes\n * \n * words/search?value={search}\n * words/read/{limit}/{level?} - pagination\n * words/get?limit={int}&offset={int}&id={int}&level={str}\n * phrases/read/{limit} - pagination\n * exercises/search?value={search}\n * exercises/read/{limit}/{lesson?} - pagination\n * lessons\n */\n\nconst apiUri = 'https://summertime-sadness.herokuapp.com/api/';\n\n\nexport const Data = {\n\n    get: function(uri, options={}) {\n        \n        return fetch(uri, options)\n            .then((response) => {\n                return response.json();\n            });\n    }\n};\n\n\nexport const Uris = {\n\n    wordsSearch: apiUri + 'words/search',\n    wordsRead: apiUri + 'words/read',\n    wordsGet: apiUri + 'words/get',\n    phrasesRead: apiUri + 'phrases/read',\n    exrcisesSearch: apiUri + 'exercises/search',\n    exrcisesRead: apiUri + 'exercises/read',\n    lessons: apiUri + 'lessons',\n\n};\n\n\nexport const Local = {\n\n    defaultData: {\n        sound: true,\n        exercises: {},\n        words: {\n            dontKnow: [],\n            offset: 0,\n        }\n    },\n\n    setItem: function(key, data) {\n        localStorage.setItem(key, data);\n    },\n\n    getItem: function(key) {\n        return localStorage.getItem(key);\n    },\n\n    setData: function (data = Local.defaultData, key = 'learningEnglish') {\n        localStorage.setItem(key, JSON.stringify(data));\n    },\n\n    getData: function (key = 'learningEnglish') {\n        return JSON.parse(localStorage.getItem(key));\n    }\n};","export const getMp3 = (word) => `https://b0r1slav.github.io/pronunciation/mp3/${word}.mp3`;\n\n\nexport const playMp3 = (str='') => {\n    let mp3Name = str.trim().toLowerCase().replace(/[^a-zA-Z]+/, '_');\n    let audio = new Audio(getMp3(mp3Name));\n\n    audio.play();\n\n};\n\n\nexport const myUrl = {\n\n    setParams: function (url, params = {}) {\n        let uri = new URL(url);\n        uri.search = new URLSearchParams(params);\n\n        return uri;\n    }\n};","import React from 'react';\nimport { Data, Uris } from './Data';\nimport { playMp3 } from './helpers';\nimport { FaVolumeUp } from 'react-icons/fa';\n\n\nclass ModalDictionary extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: '',\n            words: [],\n        }\n    }\n\n\n    handleChange = (event) => {\n\n        this.setState({\n            value: event.currentTarget.value\n        });\n    };\n\n\n    handlePlay = (event) => {\n\n        playMp3(event.currentTarget.dataset.word);\n\n    };\n\n\n    render() {\n\n        const list = this.state.words.map(function(item, index) {\n            return (\n                <p key={index}>\n                    <button type=\"button\" className=\"text-primary pronons\" data-word={item.en} onClick={this.handlePlay}>\n                        <FaVolumeUp /> \n                    </button> \n                    {item.en} - {item.bg} \n                </p>\n            );\n        }, this);\n\n        return (\n            <div style={this.props.styles} className=\"modal bootstrap-modal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n                <div className=\"modal-dialog modal-lg\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h6 className=\"modal-title\">Dictionary A1 - C1</h6>\n                            <button type=\"button\" className=\"close\" onClick={this.props.handleDictionary}>\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body P-5\">\n                            <div className=\"input-group M-B10\">\n                                <input type=\"search\" \n                                    className=\"form-control rounded-0\" \n                                    value={this.state.value} \n                                    onChange={this.handleChange} \n                                    placeholder=\"Enter word ...\" />\n                            </div>\n\n                            <div className=\"search-response\">\n                                {list}\n                            </div>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button type=\"button\" className=\"btn btn-sm btn-secondary\" onClick={this.props.handleDictionary}>Close</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n\n    componentDidUpdate(prevProps, prevState) {\n\n        const value = this.state.value.trim();\n\n        if (value !== prevState.value.trim()) {\n            Data.get(`${Uris.wordsSearch}?value=${value}`)\n            .then((response) => {\n                this.setState({\n                    words: response.data\n                });\n            });\n        }\n        \n    }\n\n}\n\nexport default ModalDictionary;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { IoIosArrowBack } from 'react-icons/io';\nimport ModalDictionary from '../ModalDictionary';\nimport './Sidebar.css';\n\n\nclass Sidebar extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            styles: {\n                display: 'none'\n            }\n        }\n    }\n\n\n    handleDictionary = () => {\n\n        const display = this.state.styles.display === 'none' ? 'block' : 'none';\n\n        this.setState({\n            styles: {\n                display: display\n            }\n        });\n    };\n\n\n    render() {\n\n        return (\n            <div style={this.props.styles.sidebar} onClick={this.props.closeSidebar} className=\"sidebar\">\n                <button className=\"btnClose\"><IoIosArrowBack /></button>\n                <div className=\"sidebarContainer\">\n                    <Link to=\"/learn-words\">Learn Words</Link>\n                    <Link to=\"/exercises\">Exercises</Link>\n                    <Link to=\"/expressions\">Expressions</Link>\n                    <button type=\"button\" className=\"link\" onClick={this.handleDictionary}>Dictionary</button>\n                    <Link to=\"/settings\">Settings</Link>\n                </div>\n                <ModalDictionary styles={this.state.styles} handleDictionary={this.handleDictionary} />\n            </div>\n        );\n    }\n}\n\nexport default Sidebar;","import React from 'react';\nimport './App.css';\nimport Navigation from './common/navigation/Navigation';\nimport Sidebar from './common/sidebar/Sidebar';\nimport { Local } from './common/Data';\n\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            styles: {\n                sidebar: { width: 0 }\n            }\n        };\n\n        this.openSidebar = this.openSidebar.bind(this);\n        this.closeSidebar = this.closeSidebar.bind(this);\n    }\n\n\n    openSidebar() {\n        this.setState({\n            styles: {\n                sidebar: { width: '250px' }\n            }\n        });\n    }\n\n\n    closeSidebar() {\n        this.setState({\n            styles: {\n                sidebar: { width: 0 }\n            }\n        });\n    }\n\n\n    render() {\n\n        return (\n            <div>\n                <Sidebar styles={this.state.styles} closeSidebar={this.closeSidebar} />\n                <Navigation openSidebar={this.openSidebar} />\n            </div>\n        );\n    }\n\n\n    componentDidMount() {\n\n        if( ! Local.getData() ) {\n            Local.setData();\n        }\n    }\n}\n\n\nexport default App;\n","import React from 'react';\nimport App from '../App';\nimport { IoIosArrowForward } from 'react-icons/io';\nimport { Data, Uris, Local } from '../common/Data';\nimport { Link } from 'react-router-dom';\n\n\nclass ExercisesNav extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            lessons: []\n        };\n    }\n\n\n    handleLocal = (response) => {\n\n        let learningEnglish = Local.getData();\n        const exercisesLength = Object.keys(learningEnglish.exercises).length;\n\n        if (!exercisesLength || exercisesLength !== response.length) {\n\n            response.forEach(element => {\n                if (!learningEnglish.exercises['lesson' + element.id]) {\n                    learningEnglish.exercises['lesson' + element.id] = [];\n                }\n            });\n\n            Local.setData(learningEnglish);\n        }\n\n    };\n\n\n    render() {\n\n        const {exercises} = Local.getData();\n\n        this.state.lessons.sort(function(a, b) {\n\n            if (a.id === 18) return 1;\n            if (b.id === 18) return -1;\n\n            return a.id - b.id;\n\n        });\n\n\n        let list = this.state.lessons.map(function (lesson, index) {\n            return (\n                <li key={index} className=\"list-group-item li-nav\">\n                    <Link to={`/exercises/${lesson.id}`} className=\"nav-item\">\n                        {lesson.title}\n                        <span className=\"itemRight\">\n                            <span className=\"text-success\">\n                                {exercises[`lesson${lesson.id}`].length}\n                            </span>\n                            /{lesson.exercises_count} &nbsp;\n                            <IoIosArrowForward />\n                        </span>\n                    </Link>\n                </li>\n            );\n        });\n\n\n        return (\n            <div>\n                <App />\n                <div className=\"main\">\n                    <div className=\"card\">\n                        <ul className=\"list-group list-group-flush\">\n                            {list}\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n\n    componentDidMount() {\n\n        Data.get(Uris.lessons)\n        .then((response) => {\n\n            this.handleLocal(response);\n\n            return response;\n\n        })\n        .then((response) => {\n\n            this.setState({\n                lessons: response\n            });\n\n        });\n    }\n\n}\n\nexport default ExercisesNav;","import React from 'react';\nimport App from '../App';\nimport { Data, Uris, Local } from '../common/Data';\nimport '../common/common.css';\n\n\nclass Exercises extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: {},\n            exercises: [],\n            answered: []\n        };\n    }\n\n\n    handleAnswer = (event) => {\n        const { lesson } = this.props.match.params;\n        const { id } = event.currentTarget.dataset;\n        let learningEnglish = Local.getData();\n        let exercises = learningEnglish.exercises[`lesson${lesson}`];\n\n        if (exercises.indexOf(id) < 0) {\n            exercises.push(id);\n        }\n\n        Local.setData(learningEnglish);\n    };\n\n    handleBlur = (event) => {\n        const { id } = event.currentTarget.dataset;\n        let { answered } = this.state;\n\n        if (answered.indexOf(id) < 0) {\n            answered.push(+id);\n\n            this.setState({\n                answered: answered\n            });\n        }\n\n    };\n\n\n    render() {\n\n        const { exercises, answered } = this.state;\n\n        let list = exercises.map(function (exercise, index) {\n\n            let classAnswered = answered.indexOf(exercise.id) > -1 ? 'text-secondary' : '';\n\n            return (\n                <div key={index} className={`card item ${classAnswered}`} >\n                    <div className=\"card-body\">\n                        <p>{index+1}. {exercise.bg}</p>\n                        <textarea className=\"form-control\" rows=\"2\" placeholder=\"Your answer\"></textarea>\n                        <details>\n                            <summary className=\"answer\" data-id={exercise.id} onClick={this.handleAnswer} onBlur={this.handleBlur}>Compare</summary>\n                            <p>{ exercise.en }</p>\n                        </details>\n                    </div>\n                </div>\n            );\n        }, this);\n\n\n        return (\n            <div>\n                <App />\n                <div className=\"main\">\n                    { list }\n                </div>\n            </div>\n        );\n    }\n\n\n    componentDidMount() {\n\n        Data.get(`${Uris.exrcisesRead}/200/${this.props.match.params.lesson}`)\n            .then((response) => {\n\n                let local = Local.getData();\n\n                this.setState({\n                    data: response,\n                    exercises: response.data,\n                    answered: local.exercises[`lesson${this.props.match.params.lesson}`].map(Number)\n                });\n            });\n    }\n\n}\n\nexport default Exercises;","import React from 'react';\nimport App from './App';\nimport { Link } from 'react-router-dom';\nimport './common/common.css';\n\n\nconst items = [\n    {\n        uri: '/learn-words',\n        title: 'Learn Words'\n    },\n    {\n        uri: '/exercises',\n        title: 'Exercises'\n    },\n    {\n        uri: '/expressions',\n        title: 'Expressions'\n    },\n    {\n        uri: '/settings',\n        title: 'Settings'\n    }\n];\n\n\nclass Home extends React.Component {\n\n    render() {\n\n        const list = items.map(function (item, index) {\n            return (\n                <div key={index} className=\"col-sm-4 col-6 P-5\">\n                    <Link to={item.uri}>\n                        <div className=\"card\">\n                            <div className=\"card-body home-item\">\n                                {item.title}\n                            </div>\n                        </div>\n                    </Link>\n                </div>\n            );\n        });\n\n        return (\n            <div>\n                <App />\n                <div className=\"main\">\n                    <div className=\"row M-0\">\n                        {list}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n\n}\n\nexport default Home;","import React, { useState } from 'react';\nimport { FaSpinner } from 'react-icons/fa';\nimport './ButtonLoader.css'\n\n\nconst ButtonLoader = (props) => {\n    const [click, setClick] = useState(0);\n    const loader = <span><FaSpinner className=\"i-spin loader\" /><span className=\"btn-text\">{props.text}</span></span>;\n    const content = click ? loader : props.text;\n\n    const handleClick = (event) => {\n        event.currentTarget.blur();\n\n        props.func();\n\n        setClick(1);\n\n        setInterval(function(){\n            setClick()\n        }, 1000);\n    };\n\n    return (\n        <button onClick={handleClick} type=\"button\" className=\"button-loader btn btn-sm btn-outline-primary float-right position-relative\">\n            {content}\n        </button>\n    );\n};\n\nexport default ButtonLoader;","import React from 'react';\nimport App from '../../App';\nimport '../common.css';\nimport ButtonLoader from '../../components/ButtonLoader';\nimport { Local } from '../Data';\nimport { FaVolumeUp, FaVolumeMute } from 'react-icons/fa';\n\n\nclass Settings extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            reset: 0,\n            sound: true\n        };\n    }\n\n\n    handleResetExercises = () => {\n        let learningEnglish = Local.getData();\n\n        learningEnglish.exercises = {};\n\n        Local.setData(learningEnglish);\n    };\n\n\n    handleResetLearnWords = () => {\n        let learningEnglish = Local.getData();\n\n        learningEnglish.words = {\n            dontKnow: [],\n            offset: 0\n        };\n\n        Local.setData(learningEnglish);\n    };\n\n\n    handleSound = () => {\n        let learningEnglish = Local.getData();\n\n        learningEnglish.sound = !learningEnglish.sound;\n\n        Local.setData(learningEnglish);\n\n        this.setState({\n            sound: learningEnglish.sound\n        });\n    };\n\n\n    render() {\n\n        return (\n            <div>\n                <App />\n                <div className=\"main\">\n                    <div className=\"card\">\n                        <ul className=\"list-group list-group-flush\">\n                            <li className=\"list-group-item li-nav\">\n                                Sound \n                                <button type=\"button\" className=\"btn btn-sm btn-outline-primary rounded-circle float-right\" onClick={this.handleSound}>\n                                    {this.state.sound ? <FaVolumeUp /> : <FaVolumeMute />}\n                                </button>\n                            </li>\n                            <li className=\"list-group-item li-nav\">\n                                Exercises\n                                <ButtonLoader func={this.handleResetExercises} text=\"reset progress\" />\n                            </li>\n                            <li className=\"list-group-item li-nav\">\n                                Learn Words\n                                <ButtonLoader func={this.handleResetLearnWords} text=\"reset progress\" />\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n\n    componentDidMount() {\n        const learningEnglish = Local.getData();\n\n        this.setState({\n            sound: learningEnglish.sound\n        });\n    }\n\n}\n\nexport default Settings;","import React from 'react';\nimport App from '../App';\nimport { Data, Uris } from '../common/Data';\n\n\nclass Expressions extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            response: {\n                data: []\n            },\n            value: ''\n        };\n    }\n\n\n    handleChange = (event) => {\n\n        this.setState({\n            value: event.currentTarget.value\n        });\n    };\n\n\n    getExpressions = (search='') => {\n\n        Data.get(`${Uris.exrcisesSearch}?value=${search.replace(/\\s+/g, '+')}`)\n            .then((response) => {\n                this.setState({\n                    response: response,\n                });\n            });\n    };\n\n\n    render() {\n\n        const test = /^[a-zA-Z]+/.test(this.state.value.trim());\n        const sorting = test ? ['en', 'bg'] : ['bg', 'en'];\n\n        let list = this.state.response.data.map(function(item, index) {\n            return (\n                <div key={index} className=\"card item P-10\">\n                    <p>{item[ sorting[0] ]}</p>\n                    <p>{item[ sorting[1] ]}</p>\n                </div>\n            );\n        });\n\n        return (\n            <div>\n                <App />\n                <div className=\"main\">\n                    <div className=\"card item P-10\">\n                        <div className=\"input-group\">\n                            <input  type=\"search\" \n                                className=\"form-control rounded-0\" \n                                value={this.state.value} \n                                onChange={this.handleChange} \n                                aria-describedby=\"expressionHelp\"\n                                placeholder=\"Search...\" />\n                        </div>\n                        <small id=\"expressionHelp\" className=\"form-text text-muted\">Please enter at least 3 characters to search</small>\n                    </div>\n                    {list}\n                </div>\n            </div>\n        );\n    }\n\n\n    componentDidMount() {\n\n        this.getExpressions();\n    }\n\n\n    componentDidUpdate(prevProps, prevState) {\n\n        const value = this.state.value.trim();\n\n        if (value !== prevState.value.trim() && (value.length > 2 || value.length < 1) ) {\n\n            this.getExpressions(value);\n        }\n\n    }\n}\n\nexport default Expressions;","import React, { useEffect } from 'react';\nimport { FaVolumeUp } from 'react-icons/fa';\nimport { playMp3 } from '../common/helpers';\n\n\nconst handlePlay = (event) => {\n\n    playMp3(event.currentTarget.dataset.word);\n\n};\n\n\nconst Answer = (props) => {\n\n\n    useEffect(() => {\n        playMp3(props.word.en);\n    });\n\n\n    return (\n        <div className=\"card-body\">\n            <p>{props.word.en}</p>\n            <div>\n                <button type=\"button\" className=\"text-primary pronons M-T10 M-B15\" data-word={props.word.en} onClick={handlePlay}>\n                    <FaVolumeUp />\n                </button>\n            </div>\n            <button type=\"button\"\n                className=\"btn btn-primary btn-sm float-right\"\n                onClick={props.handleNext}>\n                Next\n            </button>\n        </div>\n    );\n}\n\nexport default Answer;","import React from 'react';\n\n\nconst Quiz = (props) => {\n    \n    return (\n        <div className=\"card-body\">\n            <p>{props.word.bg}</p>\n            <div className=\"M-B15\">\n                <input type=\"text\"\n                    className=\"form-control rounded-0\"\n                    placeholder=\"Your answer...\"\n                    value={props.value}\n                    onChange={(event) => props.handleChange(event, props.word)} />\n            </div>\n            <div>\n                <button type=\"button\"\n                    className=\"btn btn-primary btn-sm\"\n                    onClick={() => props.handleIKnow(props.word)}>\n                    I know\n                    </button>\n                <button type=\"button\"\n                    className=\"btn btn-primary btn-sm float-right\"\n                    onClick={props.handleAnswer}>\n                    Answer\n                    </button>\n            </div>\n        </div>\n    );\n};\n\nexport default Quiz;","import React from 'react';\nimport App from '../App';\nimport { Data, Uris, Local } from '../common/Data';\nimport { myUrl, playMp3 } from '../common/helpers';\nimport './LearnWords.css';\nimport Answer from './Answer';\nimport Quiz from './Quiz';\n\n\nconst setCount = 9;\n\n\nclass LearnWords extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            words: [\n                { id: 0, en: '-----', bg: '-----', level: '--' }\n            ],\n            currentWord: 0,\n            value: '',\n            answer: 0,\n            offset: 0,\n        };\n    }\n\n\n    handleChange = (event, word) => {\n        const value = event.currentTarget.value.trim().toLowerCase();\n\n        if (value === word.en.trim().toLowerCase()) {\n            this.handleIKnow(word);\n        } else {\n            this.setState({\n                value: event.currentTarget.value\n            });\n        }\n\n    };\n\n\n    handleIKnow = (word) => {\n        let { currentWord } = this.state;\n        let learningEnglish = Local.getData();\n\n\n        playMp3(word.en);\n\n        learningEnglish.words.dontKnow = learningEnglish.words.dontKnow.filter(item => item.id !== word.id);\n\n        currentWord++;\n\n        if (currentWord === setCount) {\n\n            if (learningEnglish.words.offset) {\n                learningEnglish.words.offset = learningEnglish.words.offset + setCount - learningEnglish.words.dontKnow.length;\n            } else {\n                learningEnglish.words.offset = setCount;\n            }\n\n\n            this.getWords(learningEnglish)\n                .then(function (response) {\n\n                    let data = response.concat(learningEnglish.words.dontKnow)\n\n                    this.setState({\n                        words: data,\n                        currentWord: 0,\n                        value: '',\n                        offset: learningEnglish.words.offset\n                    });\n\n                    learningEnglish.words.dontKnow = data;\n                    Local.setData(learningEnglish);\n\n                }.bind(this));\n\n        } else {\n            this.setState({\n                currentWord: currentWord,\n                value: ''\n            });\n\n            Local.setData(learningEnglish);\n        }\n\n    };\n\n\n    handleNext = () => {\n        let { currentWord } = this.state;\n        let learningEnglish = Local.getData();\n\n        currentWord++;\n\n        if (currentWord === setCount) {\n\n            if (learningEnglish.words.offset) {\n                learningEnglish.words.offset = learningEnglish.words.offset + setCount - learningEnglish.words.dontKnow.length;\n            } else {\n                learningEnglish.words.offset = setCount;\n            }\n\n            this.getWords(learningEnglish)\n                .then(function (response) {\n\n                    let data = response.concat(learningEnglish.words.dontKnow);\n\n                    this.setState({\n                        words: data,\n                        currentWord: 0,\n                        answer: 0,\n                        offset: learningEnglish.words.offset\n                    });\n                    \n                    learningEnglish.words.dontKnow = data;\n                    Local.setData(learningEnglish);\n\n                }.bind(this))\n                .catch(function (data) {\n\n                    this.setState({\n                        words: data,\n                        offset: learningEnglish.words.offset\n                    });\n\n                }.bind(this));;\n\n        } else {\n            this.setState({\n                currentWord: currentWord,\n                answer: 0\n            });\n        }\n\n    };\n\n\n    handleAnswer = () => {\n        this.setState({\n            answer: 1\n        });\n    };\n\n\n    getWords = (local = {}) => {\n\n        return new Promise(function (resolve, reject) {\n\n            const limit = setCount - local.words.dontKnow.length;\n\n            if (limit) {\n\n                let url = myUrl.setParams(Uris.wordsGet, {\n                    limit: limit,\n                    offset: local.words.offset\n                });\n\n                Data.get(url)\n                    .then((response) => {\n\n                        resolve(response);\n\n                    });\n            } else {\n\n                reject(local.words.dontKnow);\n            }\n\n        });\n    };\n\n\n    render() {\n\n        const word = this.state.words[this.state.currentWord];\n\n        const compQuiz = (\n            <Quiz handleChange={this.handleChange} \n                handleIKnow={this.handleIKnow} \n                handleAnswer={this.handleAnswer} \n                value={this.state.value} \n                word={word} />\n        );\n\n        const compAnswer = <Answer handleNext={this.handleNext} word={word} />;\n\n\n        return (\n            <div>\n                <App />\n                <div className=\"main\">\n                    <div className=\"card item MH-180\" >\n                        <span className=\"word-id\">{word.id}</span>\n                        <span className=\"index\">{this.state.currentWord + 1}</span>\n\n                        {this.state.answer ? compAnswer : compQuiz}\n                    </div>\n                    <div className=\"M-10\">\n                        <p>Level: {word.level}</p>\n                        <p>Set's count: {setCount}</p>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n\n    componentDidMount() {\n\n        let learningEnglish = Local.getData();\n\n        this.getWords(learningEnglish)\n            .then(function (response) {\n                \n                let data = response.concat(learningEnglish.words.dontKnow);\n                learningEnglish.words.dontKnow = data;\n\n                this.setState({\n                    words: data,\n                    offset: learningEnglish.words.offset\n                });\n\n                Local.setData(learningEnglish);\n\n            }.bind(this))\n            .catch(function(data) {\n\n                this.setState({\n                    words: data,\n                    offset: learningEnglish.words.offset\n                });\n\n            }.bind(this));\n    }\n\n}\n\nexport default LearnWords;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport ExercisesNav from './exercises/ExercisesNav';\nimport Exercises from './exercises/Exercises';\nimport Home from './Home';\nimport Settings from './common/settings/Settings';\nimport Expressions from './expressions/Expressions';\nimport LearnWords from './words/LearnWords';\n\nconst Routes = () => (\n    <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/exercises\" component={ExercisesNav} />\n        <Route path=\"/exercises/:lesson\" component={Exercises} />\n        <Route path=\"/settings\" component={Settings} />\n        <Route path=\"/expressions\" component={Expressions} />\n        <Route path=\"/learn-words\" component={LearnWords} />\n    </Switch>\n);\n\nexport default Routes;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Routes from './Routes';\n\nReactDOM.render(\n    (\n        <Router basename={process.env.PUBLIC_URL}>\n            <Routes />\n        </Router>\n    ),\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}