{"version":3,"sources":["serviceWorker.js","common/navigation/Navigation.js","common/sidebar/Sidebar.js","App.js","common/Data.js","exercises/ExercisesNav.js","exercises/Exercises.js","Home.js","Routes.js","index.js"],"names":["Boolean","window","location","hostname","match","Navigation","props","className","onClick","openSidebar","Sidebar","style","styles","sidebar","closeSidebar","to","App","state","width","bind","this","setState","localStorage","getItem","setItem","JSON","stringify","exercises","React","Component","Data","uri","fetch","then","response","json","ExercisesNav","handleLocal","elements","forEach","element","id","lessons","sort","a","b","list","map","lesson","index","key","title","exercises_count","learningEnglish","parse","Exercises","handleAnswer","event","console","log","data","exercise","bg","rows","placeholder","data-id","en","params","Home","Routes","exact","path","component","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0e82b758.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { IoIosMenu } from 'react-icons/io';\nimport './Navigation.css';\n\nconst Navigation = (props) => {\n\n    return (\n        <div className=\"navigation\">\n            <button onClick={props.openSidebar} className=\"btnMenu\"><IoIosMenu /></button>\n        </div>\n    );\n};\n\nexport default Navigation;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { IoIosArrowBack } from 'react-icons/io';\nimport './Sidebar.css';\n\n\nconst Sidebar = (props) => {\n\n    return (\n        <div style={props.styles.sidebar} onClick={props.closeSidebar} className=\"sidebar\">\n            <button className=\"btnClose\"><IoIosArrowBack /></button>\n            <div className=\"sidebarContainer\">\n                <Link to=\"/exercises\">Exercises</Link>\n            </div>\n        </div>\n    );\n};\n\nexport default Sidebar;","import React from 'react';\nimport './App.css';\nimport Navigation from './common/navigation/Navigation';\nimport Sidebar from './common/sidebar/Sidebar';\n\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            styles: {\n                sidebar: { width: 0 }\n            }\n        };\n\n        this.openSidebar = this.openSidebar.bind(this);\n        this.closeSidebar = this.closeSidebar.bind(this);\n    }\n\n\n    openSidebar() {\n        this.setState({\n            styles: {\n                sidebar: { width: '250px' }\n            }\n        });\n    }\n\n\n    closeSidebar() {\n        this.setState({\n            styles: {\n                sidebar: { width: 0 }\n            }\n        });\n    }\n\n\n    render() {\n\n        return (\n            <div>\n                <Sidebar styles={this.state.styles} closeSidebar={this.closeSidebar} />\n                <Navigation openSidebar={this.openSidebar} />\n            </div>\n        );\n    }\n\n\n    componentDidMount() {\n\n        const local = { exercises: {}};\n\n        if( ! localStorage.getItem('learningEnglish') ) {\n            localStorage.setItem('learningEnglish', JSON.stringify(local));\n        }\n    }\n}\n\n\nexport default App;\n","const apiUri = 'https://summertime-sadness.herokuapp.com/api/';\n\n\nexport const Data = {\n\n    get: function(uri) {\n        \n        return fetch(apiUri + uri)\n            .then((response) => {\n                return response.json();\n            });\n    }\n};","import React from 'react';\nimport App from '../App';\nimport { IoIosArrowForward } from 'react-icons/io';\nimport { Data } from '../common/Data';\nimport { Link } from 'react-router-dom';\n\n\nclass ExercisesNav extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            lessons: []\n        };\n    }\n\n\n    handleLocal = (response) => {\n\n        let elements = {};\n\n        response.forEach(element => {\n            elements['lesson'+element.id] = [];\n        });\n\n        return elements;\n    };\n\n\n    render() {\n\n\n        this.state.lessons.sort(function(a, b) {\n\n            if (a.id === 18) return 1;\n            if (b.id === 18) return -1;\n\n            return a.id - b.id;\n\n        });\n\n\n        let list = this.state.lessons.map(function (lesson, index) {\n            return (\n                <li key={index} className=\"list-group-item li-nav\">\n                    <Link to={`/exercises/${lesson.id}`} className=\"nav-item\">\n                        {lesson.title}\n                        <span className=\"itemRight\">\n                            <span className=\"text-success\">0</span>/{lesson.exercises_count} &nbsp;\n                            <IoIosArrowForward />\n                        </span>\n                    </Link>\n                </li>\n            );\n        });\n\n\n        return (\n            <div>\n                <App />\n                <div className=\"main\">\n                    <div className=\"card\">\n                        <ul className=\"list-group list-group-flush\">\n                            {list}\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n\n    componentDidMount() {\n\n        let learningEnglish = JSON.parse(localStorage.getItem('learningEnglish'));\n\n        Data.get('lessons')\n        .then((response) => {\n\n            this.setState({\n                lessons: response\n            });\n\n            learningEnglish.exercises = this.handleLocal(response);\n\n            localStorage.setItem('learningEnglish', JSON.stringify(learningEnglish));\n        });\n    }\n\n}\n\nexport default ExercisesNav;","import React from 'react';\nimport App from '../App';\nimport { Data } from '../common/Data';\nimport '../common/common.css';\n\n\nclass Exercises extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: {},\n            exercises: [] \n        };\n    }\n\n\n    handleAnswer = (event) => {\n        let learningEnglish = JSON.parse(localStorage.getItem('learningEnglish'));\n\n        console.log(learningEnglish);\n\n        //TODO\n    };\n\n\n    render() {\n\n        let list = this.state.exercises.map(function (exercise, index) {\n            return (\n                <div key={index} className=\"card item\">\n                    <div className=\"card-body\">\n                        <p>{index+1}. {exercise.bg}</p>\n                        <textarea className=\"form-control\" rows=\"2\" placeholder=\"...\"></textarea>\n                        <details>\n                            <summary className=\"answer\" data-id={exercise.id} onClick={this.handleAnswer}>Answer</summary>\n                            <p>{ exercise.en }</p>\n                        </details>\n                    </div>\n                </div>\n            );\n        }, this);\n\n\n        return (\n            <div>\n                <App />\n                <div className=\"main\">\n                    { list }\n                </div>\n            </div>\n        );\n    }\n\n\n    componentDidMount() {\n\n        Data.get(`exercises/200/${this.props.match.params.lesson}`)\n            .then((response) => {\n                this.setState({\n                    data: response,\n                    exercises: response.data\n                });\n            });\n    }\n\n}\n\nexport default Exercises;","import React from 'react';\nimport App from './App';\nimport { Link } from 'react-router-dom';\nimport './common/common.css';\n\n\nclass Home extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: {},\n            exercises: []\n        };\n    }\n\n\n    render() {\n\n\n\n        return (\n            <div>\n                <App />\n                <div className=\"main\">\n                    <div className=\"row M-0\">\n                        <div className=\"col-sm-3 col-xs-6 P-5\">\n                            <Link to=\"/exercises\" className=\"home-item\">\n                                <div className=\"card\">\n                                    <div className=\"card-body\">exercises</div>\n                                </div>\n                            </Link>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n\n}\n\nexport default Home;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport ExercisesNav from './exercises/ExercisesNav';\nimport Exercises from './exercises/Exercises';\nimport Home from './Home';\n\nconst Routes = () => (\n    <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/exercises\" component={ExercisesNav} />\n        <Route path=\"/exercises/:lesson\" component={Exercises} />\n    </Switch>\n);\n\nexport default Routes;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Routes from './Routes';\n\nReactDOM.render(\n    (\n        <Router basename={process.env.PUBLIC_URL}>\n            <Routes />\n        </Router>\n    ),\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}