{"version":3,"sources":["serviceWorker.js","common/navigation/Navigation.js","common/Data.js","common/ModalDictionary.js","common/sidebar/Sidebar.js","App.js","exercises/ExercisesNav.js","exercises/Exercises.js","Home.js","components/ButtonLoader.js","common/settings/Settings.js","Routes.js","index.js"],"names":["Boolean","window","location","hostname","match","Navigation","props","className","onClick","openSidebar","Data","uri","fetch","then","response","json","Local","key","data","localStorage","setItem","JSON","stringify","parse","getItem","ModalDictionary","handleChange","event","setState","value","currentTarget","clearInput","handlePlay","mp3Name","dataset","word","trim","toLowerCase","replace","Audio","play","state","words","list","this","map","item","index","type","data-word","en","bg","style","styles","tabIndex","role","aria-hidden","handleDictionary","onChange","prevProps","prevState","search","React","Component","Sidebar","display","sidebar","closeSidebar","to","App","width","bind","exercises","ExercisesNav","handleLocal","learningEnglish","exercisesLength","Object","keys","length","forEach","element","id","lessons","sort","a","b","lesson","title","exercises_count","Exercises","handleAnswer","params","indexOf","push","handleBlur","answered","exercise","classAnswered","rows","placeholder","data-id","onBlur","local","Number","items","Home","ButtonLoader","useState","click","setClick","loader","text","content","blur","func","setInterval","Settings","handleReset","reset","Routes","exact","path","component","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8cbccf6b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { IoIosMenu } from 'react-icons/io';\nimport './Navigation.css';\n\nconst Navigation = (props) => {\n\n    return (\n        <div className=\"navigation\">\n            <button onClick={props.openSidebar} className=\"btnMenu\"><IoIosMenu /></button>\n        </div>\n    );\n};\n\nexport default Navigation;","/**\n * API routes\n * \n * words/search/{search?}\n * words/{limit}/{level?}\n * phrases/{limit}\n * exercises/search/{search?}\n * exercises/{limit}/{lesson?}\n * lessons\n */\n\nconst apiUri = 'https://summertime-sadness.herokuapp.com/api/';\n\n\nexport const Data = {\n\n    get: function(uri) {\n        \n        return fetch(apiUri + uri)\n            .then((response) => {\n                return response.json();\n            });\n    }\n};\n\n\nexport const Local = {\n\n    setItem: function(key, data) {\n        localStorage.setItem(key, JSON.stringify(data));\n    },\n\n    getItem: function(key) {\n        return JSON.parse(localStorage.getItem(key));\n    }\n};","import React from 'react';\nimport { Data } from './Data';\nimport { IoMdClose } from 'react-icons/io';\nimport { FaVolumeUp } from 'react-icons/fa';\n\n\nclass ModalDictionary extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: '',\n            words: [],\n        }\n    }\n\n\n    handleChange = (event) => {\n\n        this.setState({\n            value: event.currentTarget.value\n        });\n    };\n\n\n    clearInput = () => {\n\n        this.setState({\n            value: ''\n        });\n    };\n\n\n    handlePlay = (event) => {\n        let mp3Name = event.currentTarget.dataset.word.trim().toLowerCase().replace(/[^a-zA-Z]+/, '_');\n        let audio = new Audio(`https://b0r1slav.github.io/pronunciation/mp3/${mp3Name}.mp3`);\n\n        audio.play();\n\n    };\n\n\n    render() {\n\n        const list = this.state.words.map(function(item, index) {\n            return (\n                <p key={index}>\n                    <button type=\"button\" className=\"text-primary pronons\" data-word={item.en} onClick={this.handlePlay}>\n                        <FaVolumeUp /> \n                    </button> \n                    {item.en} - {item.bg} \n                </p>\n            );\n        }, this);\n\n        return (\n            <div style={this.props.styles} className=\"modal bootstrap-modal\" tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n                <div className=\"modal-dialog modal-lg\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h6 className=\"modal-title\">Dictionary A1 - C1</h6>\n                            <button type=\"button\" className=\"close\" onClick={this.props.handleDictionary}>\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body P-5\">\n                            <div className=\"input-group M-B10\">\n                                <input type=\"text\" className=\"form-control\" value={this.state.value} onChange={this.handleChange} />\n                                <button className=\"clear-input\" onClick={this.clearInput}><IoMdClose /></button>\n                            </div>\n\n                            <div className=\"search-response\">\n                                {list}\n                            </div>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button type=\"button\" className=\"btn btn-sm btn-secondary\" onClick={this.props.handleDictionary}>Close</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n\n    componentDidUpdate(prevProps, prevState) {\n        \n        const search  = this.state.value || null;\n\n        if (this.state.value !== prevState.value) {\n            Data.get(`words/search/${search}`)\n            .then((response) => {\n                this.setState({\n                    words: response.data\n                });\n            });\n        }\n        \n    }\n\n}\n\nexport default ModalDictionary;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { IoIosArrowBack } from 'react-icons/io';\nimport ModalDictionary from '../ModalDictionary';\nimport './Sidebar.css';\n\n\nclass Sidebar extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            styles: {\n                display: 'none'\n            }\n        }\n    }\n\n\n    handleDictionary = () => {\n\n        const display = this.state.styles.display === 'none' ? 'block' : 'none';\n\n        this.setState({\n            styles: {\n                display: display\n            }\n        });\n    };\n\n\n    render() {\n\n        return (\n            <div style={this.props.styles.sidebar} onClick={this.props.closeSidebar} className=\"sidebar\">\n                <button className=\"btnClose\"><IoIosArrowBack /></button>\n                <div className=\"sidebarContainer\">\n                    <Link to=\"/exercises\">Exercises</Link>\n                    <button type=\"button\" className=\"link\" onClick={this.handleDictionary}>Dictionary</button>\n                    <Link to=\"/settings\">Settings</Link>\n                </div>\n                <ModalDictionary styles={this.state.styles} handleDictionary={this.handleDictionary} />\n            </div>\n        );\n    }\n}\n\nexport default Sidebar;","import React from 'react';\nimport './App.css';\nimport Navigation from './common/navigation/Navigation';\nimport Sidebar from './common/sidebar/Sidebar';\n\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            styles: {\n                sidebar: { width: 0 }\n            }\n        };\n\n        this.openSidebar = this.openSidebar.bind(this);\n        this.closeSidebar = this.closeSidebar.bind(this);\n    }\n\n\n    openSidebar() {\n        this.setState({\n            styles: {\n                sidebar: { width: '250px' }\n            }\n        });\n    }\n\n\n    closeSidebar() {\n        this.setState({\n            styles: {\n                sidebar: { width: 0 }\n            }\n        });\n    }\n\n\n    render() {\n\n        return (\n            <div>\n                <Sidebar styles={this.state.styles} closeSidebar={this.closeSidebar} />\n                <Navigation openSidebar={this.openSidebar} />\n            </div>\n        );\n    }\n\n\n    componentDidMount() {\n\n        const local = { exercises: {}};\n\n        if( ! localStorage.getItem('learningEnglish') ) {\n            localStorage.setItem('learningEnglish', JSON.stringify(local));\n        }\n    }\n}\n\n\nexport default App;\n","import React from 'react';\nimport App from '../App';\nimport { IoIosArrowForward } from 'react-icons/io';\nimport { Data, Local } from '../common/Data';\nimport { Link } from 'react-router-dom';\n\n\nclass ExercisesNav extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            lessons: []\n        };\n    }\n\n\n    handleLocal = (response) => {\n\n        let learningEnglish = Local.getItem('learningEnglish');\n        const exercisesLength = Object.keys(learningEnglish.exercises).length;\n\n        if (!exercisesLength || exercisesLength !== response.length) {\n\n            response.forEach(element => {\n                if (!learningEnglish.exercises['lesson' + element.id]) {\n                    learningEnglish.exercises['lesson' + element.id] = [];\n                }\n            });\n\n            Local.setItem('learningEnglish', learningEnglish);\n        }\n\n    };\n\n\n    render() {\n\n        const {exercises} = Local.getItem('learningEnglish');\n\n        this.state.lessons.sort(function(a, b) {\n\n            if (a.id === 18) return 1;\n            if (b.id === 18) return -1;\n\n            return a.id - b.id;\n\n        });\n\n\n        let list = this.state.lessons.map(function (lesson, index) {\n            return (\n                <li key={index} className=\"list-group-item li-nav\">\n                    <Link to={`/exercises/${lesson.id}`} className=\"nav-item\">\n                        {lesson.title}\n                        <span className=\"itemRight\">\n                            <span className=\"text-success\">\n                                {exercises[`lesson${lesson.id}`].length}\n                            </span>\n                            /{lesson.exercises_count} &nbsp;\n                            <IoIosArrowForward />\n                        </span>\n                    </Link>\n                </li>\n            );\n        });\n\n\n        return (\n            <div>\n                <App />\n                <div className=\"main\">\n                    <div className=\"card\">\n                        <ul className=\"list-group list-group-flush\">\n                            {list}\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n\n    componentDidMount() {\n\n        Data.get('lessons')\n        .then((response) => {\n\n            this.handleLocal(response);\n\n            return response;\n\n        })\n        .then((response) => {\n\n            this.setState({\n                lessons: response\n            });\n\n        });\n    }\n\n}\n\nexport default ExercisesNav;","import React from 'react';\nimport App from '../App';\nimport { Data, Local } from '../common/Data';\nimport '../common/common.css';\n\n\nclass Exercises extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: {},\n            exercises: [],\n            answered: []\n        };\n    }\n\n\n    handleAnswer = (event) => {\n        const { lesson } = this.props.match.params;\n        const { id } = event.currentTarget.dataset;\n        let learningEnglish = Local.getItem('learningEnglish');\n        let exercises = learningEnglish.exercises[`lesson${lesson}`];\n\n        if (exercises.indexOf(id) < 0) {\n            exercises.push(id);\n        }\n\n        Local.setItem('learningEnglish', learningEnglish);\n    };\n\n    handleBlur = (event) => {\n        const { id } = event.currentTarget.dataset;\n        let { answered } = this.state;\n\n        if (answered.indexOf(id) < 0) {\n            answered.push(+id);\n\n            this.setState({\n                answered: answered\n            });\n        }\n\n    };\n\n\n    render() {\n\n        const { exercises, answered } = this.state;\n\n        let list = exercises.map(function (exercise, index) {\n\n            let classAnswered = answered.indexOf(exercise.id) > -1 ? 'text-secondary' : '';\n\n            return (\n                <div key={index} className={`card item ${classAnswered}`} >\n                    <div className=\"card-body\">\n                        <p>{index+1}. {exercise.bg}</p>\n                        <textarea className=\"form-control\" rows=\"2\" placeholder=\"Your answer\"></textarea>\n                        <details>\n                            <summary className=\"answer\" data-id={exercise.id} onClick={this.handleAnswer} onBlur={this.handleBlur}>Compare</summary>\n                            <p>{ exercise.en }</p>\n                        </details>\n                    </div>\n                </div>\n            );\n        }, this);\n\n\n        return (\n            <div>\n                <App />\n                <div className=\"main\">\n                    { list }\n                </div>\n            </div>\n        );\n    }\n\n\n    componentDidMount() {\n\n        Data.get(`exercises/200/${this.props.match.params.lesson}`)\n            .then((response) => {\n\n                let local = Local.getItem('learningEnglish');\n\n                this.setState({\n                    data: response,\n                    exercises: response.data,\n                    answered: local.exercises[`lesson${this.props.match.params.lesson}`].map(Number)\n                });\n            });\n    }\n\n}\n\nexport default Exercises;","import React from 'react';\nimport App from './App';\nimport { Link } from 'react-router-dom';\nimport './common/common.css';\n\n\nconst items = [\n    {\n        uri: '/exercises',\n        title: 'Exercises'\n    },\n    {\n        uri: '/settings',\n        title: 'Settings'\n    }\n];\n\n\nclass Home extends React.Component {\n\n    render() {\n\n        const list = items.map(function (item, index) {\n            return (\n                <div key={index} className=\"col-sm-4 col-6 P-5\">\n                    <Link to={item.uri}>\n                        <div className=\"card\">\n                            <div className=\"card-body home-item\">\n                                {item.title}\n                            </div>\n                        </div>\n                    </Link>\n                </div>\n            );\n        });\n\n        return (\n            <div>\n                <App />\n                <div className=\"main\">\n                    <div className=\"row M-0\">\n                        {list}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n\n}\n\nexport default Home;","import React, { useState } from 'react';\nimport { FaSpinner } from 'react-icons/fa';\nimport './ButtonLoader.css'\n\n\nconst ButtonLoader = (props) => {\n    const [click, setClick] = useState(0);\n    const loader = <span><FaSpinner className=\"i-spin loader\" /><span className=\"btn-text\">{props.text}</span></span>;\n    const content = click ? loader : props.text;\n\n    const handleClick = (event) => {\n        event.currentTarget.blur();\n\n        props.func();\n\n        setClick(1);\n\n        setInterval(function(){\n            setClick()\n        }, 1000);\n    };\n\n    return (\n        <button onClick={handleClick} type=\"button\" id=\"button-loader\" className=\"btn btn-sm btn-outline-primary float-right position-relative\">\n            {content}\n        </button>\n    );\n};\n\nexport default ButtonLoader;","import React from 'react';\nimport App from '../../App';\nimport '../common.css';\nimport ButtonLoader from '../../components/ButtonLoader';\n\n\nclass Settings extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            reset: 0\n        };\n    }\n\n\n    handleReset = () => {\n        let learningEnglish = JSON.parse(localStorage.getItem('learningEnglish'));\n\n        learningEnglish.exercises = {};\n\n        localStorage.setItem('learningEnglish', JSON.stringify(learningEnglish));\n    };\n\n\n    render() {\n\n        return (\n            <div>\n                <App />\n                <div className=\"main\">\n                    <div className=\"card\">\n                        <ul className=\"list-group list-group-flush\">\n                            <li className=\"list-group-item li-nav\">\n                                Exercises \n                                <ButtonLoader func={this.handleReset} text=\"reset progress\" />\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default Settings;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport ExercisesNav from './exercises/ExercisesNav';\nimport Exercises from './exercises/Exercises';\nimport Home from './Home';\nimport Settings from './common/settings/Settings';\n\nconst Routes = () => (\n    <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/exercises\" component={ExercisesNav} />\n        <Route path=\"/exercises/:lesson\" component={Exercises} />\n        <Route path=\"/settings\" component={Settings} />\n    </Switch>\n);\n\nexport default Routes;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Routes from './Routes';\n\nReactDOM.render(\n    (\n        <Router basename={process.env.PUBLIC_URL}>\n            <Routes />\n        </Router>\n    ),\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}