{"version":3,"sources":["serviceWorker.js","common/navigation/Navigation.js","common/sidebar/Sidebar.js","App.js","common/Data.js","exercises/ExercisesNav.js","exercises/Exercises.js","Home.js","components/ButtonLoader.js","common/settings/Settings.js","Routes.js","index.js"],"names":["Boolean","window","location","hostname","match","Navigation","props","className","onClick","openSidebar","Sidebar","style","styles","sidebar","closeSidebar","to","App","state","width","bind","this","setState","localStorage","getItem","setItem","JSON","stringify","exercises","React","Component","Data","uri","fetch","then","response","json","Local","key","data","parse","ExercisesNav","handleLocal","learningEnglish","exercisesLength","Object","keys","length","forEach","element","id","lessons","sort","a","b","list","map","lesson","index","title","exercises_count","Exercises","handleAnswer","event","params","currentTarget","dataset","indexOf","push","handleBlur","answered","exercise","classAnswered","bg","rows","placeholder","data-id","onBlur","en","local","Number","items","Home","item","ButtonLoader","useState","click","setClick","loader","text","content","blur","func","setInterval","type","Settings","handleReset","reset","Routes","exact","path","component","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9071c329.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { IoIosMenu } from 'react-icons/io';\nimport './Navigation.css';\n\nconst Navigation = (props) => {\n\n    return (\n        <div className=\"navigation\">\n            <button onClick={props.openSidebar} className=\"btnMenu\"><IoIosMenu /></button>\n        </div>\n    );\n};\n\nexport default Navigation;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { IoIosArrowBack } from 'react-icons/io';\nimport './Sidebar.css';\n\n\nconst Sidebar = (props) => {\n\n    return (\n        <div style={props.styles.sidebar} onClick={props.closeSidebar} className=\"sidebar\">\n            <button className=\"btnClose\"><IoIosArrowBack /></button>\n            <div className=\"sidebarContainer\">\n                <Link to=\"/exercises\">Exercises</Link>\n                <Link to=\"/settings\">Settings</Link>\n            </div>\n        </div>\n    );\n};\n\nexport default Sidebar;","import React from 'react';\nimport './App.css';\nimport Navigation from './common/navigation/Navigation';\nimport Sidebar from './common/sidebar/Sidebar';\n\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            styles: {\n                sidebar: { width: 0 }\n            }\n        };\n\n        this.openSidebar = this.openSidebar.bind(this);\n        this.closeSidebar = this.closeSidebar.bind(this);\n    }\n\n\n    openSidebar() {\n        this.setState({\n            styles: {\n                sidebar: { width: '250px' }\n            }\n        });\n    }\n\n\n    closeSidebar() {\n        this.setState({\n            styles: {\n                sidebar: { width: 0 }\n            }\n        });\n    }\n\n\n    render() {\n\n        return (\n            <div>\n                <Sidebar styles={this.state.styles} closeSidebar={this.closeSidebar} />\n                <Navigation openSidebar={this.openSidebar} />\n            </div>\n        );\n    }\n\n\n    componentDidMount() {\n\n        const local = { exercises: {}};\n\n        if( ! localStorage.getItem('learningEnglish') ) {\n            localStorage.setItem('learningEnglish', JSON.stringify(local));\n        }\n    }\n}\n\n\nexport default App;\n","const apiUri = 'https://summertime-sadness.herokuapp.com/api/';\n\n\nexport const Data = {\n\n    get: function(uri) {\n        \n        return fetch(apiUri + uri)\n            .then((response) => {\n                return response.json();\n            });\n    }\n};\n\n\nexport const Local = {\n\n    setItem: function(key, data) {\n        localStorage.setItem(key, JSON.stringify(data));\n    },\n\n    getItem: function(key) {\n        return JSON.parse(localStorage.getItem(key));\n    }\n};","import React from 'react';\nimport App from '../App';\nimport { IoIosArrowForward } from 'react-icons/io';\nimport { Data, Local } from '../common/Data';\nimport { Link } from 'react-router-dom';\n\n\nclass ExercisesNav extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            lessons: []\n        };\n    }\n\n\n    handleLocal = (response) => {\n\n        let learningEnglish = Local.getItem('learningEnglish');\n        const exercisesLength = Object.keys(learningEnglish.exercises).length;\n\n        if (!exercisesLength || exercisesLength !== response.length) {\n\n            response.forEach(element => {\n                if (!learningEnglish.exercises['lesson' + element.id]) {\n                    learningEnglish.exercises['lesson' + element.id] = [];\n                }\n            });\n\n            Local.setItem('learningEnglish', learningEnglish);\n        }\n\n    };\n\n\n    render() {\n\n        const {exercises} = Local.getItem('learningEnglish');\n\n        this.state.lessons.sort(function(a, b) {\n\n            if (a.id === 18) return 1;\n            if (b.id === 18) return -1;\n\n            return a.id - b.id;\n\n        });\n\n\n        let list = this.state.lessons.map(function (lesson, index) {\n            return (\n                <li key={index} className=\"list-group-item li-nav\">\n                    <Link to={`/exercises/${lesson.id}`} className=\"nav-item\">\n                        {lesson.title}\n                        <span className=\"itemRight\">\n                            <span className=\"text-success\">\n                                {exercises[`lesson${lesson.id}`].length}\n                            </span>\n                            /{lesson.exercises_count} &nbsp;\n                            <IoIosArrowForward />\n                        </span>\n                    </Link>\n                </li>\n            );\n        });\n\n\n        return (\n            <div>\n                <App />\n                <div className=\"main\">\n                    <div className=\"card\">\n                        <ul className=\"list-group list-group-flush\">\n                            {list}\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n\n    componentDidMount() {\n\n        Data.get('lessons')\n        .then((response) => {\n\n            this.handleLocal(response);\n\n            return response;\n\n        })\n        .then((response) => {\n\n            this.setState({\n                lessons: response\n            });\n\n        });\n    }\n\n}\n\nexport default ExercisesNav;","import React from 'react';\nimport App from '../App';\nimport { Data, Local } from '../common/Data';\nimport '../common/common.css';\n\n\nclass Exercises extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: {},\n            exercises: [],\n            answered: []\n        };\n    }\n\n\n    handleAnswer = (event) => {\n        const { lesson } = this.props.match.params;\n        const { id } = event.currentTarget.dataset;\n        let learningEnglish = Local.getItem('learningEnglish');\n        let exercises = learningEnglish.exercises[`lesson${lesson}`];\n\n        if (exercises.indexOf(id) < 0) {\n            exercises.push(id);\n        }\n\n        Local.setItem('learningEnglish', learningEnglish);\n    };\n\n    handleBlur = (event) => {\n        const { id } = event.currentTarget.dataset;\n        let { answered } = this.state;\n\n        if (answered.indexOf(id) < 0) {\n            answered.push(+id);\n\n            this.setState({\n                answered: answered\n            });\n        }\n\n    };\n\n\n    render() {\n\n        const { exercises, answered } = this.state;\n\n        let list = exercises.map(function (exercise, index) {\n\n            let classAnswered = answered.indexOf(exercise.id) > -1 ? 'text-secondary' : '';\n\n            return (\n                <div key={index} className={`card item ${classAnswered}`} >\n                    <div className=\"card-body\">\n                        <p>{index+1}. {exercise.bg}</p>\n                        <textarea className=\"form-control\" rows=\"2\" placeholder=\"Your answer\"></textarea>\n                        <details>\n                            <summary className=\"answer\" data-id={exercise.id} onClick={this.handleAnswer} onBlur={this.handleBlur}>Compare</summary>\n                            <p>{ exercise.en }</p>\n                        </details>\n                    </div>\n                </div>\n            );\n        }, this);\n\n\n        return (\n            <div>\n                <App />\n                <div className=\"main\">\n                    { list }\n                </div>\n            </div>\n        );\n    }\n\n\n    componentDidMount() {\n\n        Data.get(`exercises/200/${this.props.match.params.lesson}`)\n            .then((response) => {\n\n                let local = Local.getItem('learningEnglish');\n\n                this.setState({\n                    data: response,\n                    exercises: response.data,\n                    answered: local.exercises[`lesson${this.props.match.params.lesson}`].map(Number)\n                });\n            });\n    }\n\n}\n\nexport default Exercises;","import React from 'react';\nimport App from './App';\nimport { Link } from 'react-router-dom';\nimport './common/common.css';\n\n\nconst items = [\n    {\n        uri: '/exercises',\n        title: 'Exercises'\n    },\n    {\n        uri: '/settings',\n        title: 'Settings'\n    }\n];\n\n\nclass Home extends React.Component {\n\n    render() {\n\n        const list = items.map(function (item) {\n            return (\n                <div className=\"col-sm-4 col-6 P-5\">\n                    <Link to={item.uri}>\n                        <div className=\"card\">\n                            <div className=\"card-body home-item\">\n                                {item.title}\n                            </div>\n                        </div>\n                    </Link>\n                </div>\n            );\n        });\n\n        return (\n            <div>\n                <App />\n                <div className=\"main\">\n                    <div className=\"row M-0\">\n                        {list}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n\n}\n\nexport default Home;","import React, { useState } from 'react';\nimport { FaSpinner } from 'react-icons/fa';\nimport './ButtonLoader.css'\n\n\nconst ButtonLoader = (props) => {\n    const [click, setClick] = useState(0);\n    const loader = <span><FaSpinner className=\"i-spin loader\" /><span className=\"btn-text\">{props.text}</span></span>;\n    const content = click ? loader : props.text;\n\n    const handleClick = (event) => {\n        event.currentTarget.blur();\n\n        props.func();\n\n        setClick(1);\n\n        setInterval(function(){\n            setClick()\n        }, 1000);\n    };\n\n    return (\n        <button onClick={handleClick} type=\"button\" id=\"button-loader\" className=\"btn btn-sm btn-outline-primary float-right position-relative\">\n            {content}\n        </button>\n    );\n};\n\nexport default ButtonLoader;","import React from 'react';\nimport App from '../../App';\nimport '../common.css';\nimport ButtonLoader from '../../components/ButtonLoader';\n\n\nclass Settings extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            reset: 0\n        };\n    }\n\n\n    handleReset = () => {\n        let learningEnglish = JSON.parse(localStorage.getItem('learningEnglish'));\n\n        learningEnglish.exercises = {};\n\n        localStorage.setItem('learningEnglish', JSON.stringify(learningEnglish));\n    };\n\n\n    render() {\n\n        return (\n            <div>\n                <App />\n                <div className=\"main\">\n                    <div className=\"card\">\n                        <ul className=\"list-group list-group-flush\">\n                            <li className=\"list-group-item li-nav\">\n                                Exercises \n                                <ButtonLoader func={this.handleReset} text=\"reset progress\" />\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default Settings;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport ExercisesNav from './exercises/ExercisesNav';\nimport Exercises from './exercises/Exercises';\nimport Home from './Home';\nimport Settings from './common/settings/Settings';\n\nconst Routes = () => (\n    <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/exercises\" component={ExercisesNav} />\n        <Route path=\"/exercises/:lesson\" component={Exercises} />\n        <Route path=\"/settings\" component={Settings} />\n    </Switch>\n);\n\nexport default Routes;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Routes from './Routes';\n\nReactDOM.render(\n    (\n        <Router basename={process.env.PUBLIC_URL}>\n            <Routes />\n        </Router>\n    ),\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}